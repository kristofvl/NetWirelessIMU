
Glove.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001150  000011e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001150  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000081  0080010e  0080010e  000011f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001224  2**2
                  CONTENTS, READONLY
  5 .debug_info   000009f4  00000000  00000000  00001264  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096a  00000000  00000000  00001c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000199  00000000  00000000  000025c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000371  00000000  00000000  0000275b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__ctors_end>
       4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
       8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
       c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      10:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      14:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      18:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      1c:	0c 94 13 03 	jmp	0x626	; 0x626 <__vector_7>
      20:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      24:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      28:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      2c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      30:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      34:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      38:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      3c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      40:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      44:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      48:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      4c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      50:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      54:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      58:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      5c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      60:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      64:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      68:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      6c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      70:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      74:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      78:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      7c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      80:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      84:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      88:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      8c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      90:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      94:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      98:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      9c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      a0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      a4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      a8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
      ac:	b0 00       	.word	0x00b0	; ????
      ae:	b2 00       	.word	0x00b2	; ????
      b0:	b5 00       	.word	0x00b5	; ????
      b2:	b7 00       	.word	0x00b7	; ????
      b4:	b9 00       	.word	0x00b9	; ????
      b6:	bc 00       	.word	0x00bc	; ????
      b8:	c0 00       	.word	0x00c0	; ????
      ba:	c2 00       	.word	0x00c2	; ????

000000bc <__ctors_end>:
      bc:	11 24       	eor	r1, r1
      be:	1f be       	out	0x3f, r1	; 63
      c0:	cf ef       	ldi	r28, 0xFF	; 255
      c2:	da e0       	ldi	r29, 0x0A	; 10
      c4:	de bf       	out	0x3e, r29	; 62
      c6:	cd bf       	out	0x3d, r28	; 61

000000c8 <__do_copy_data>:
      c8:	11 e0       	ldi	r17, 0x01	; 1
      ca:	a0 e0       	ldi	r26, 0x00	; 0
      cc:	b1 e0       	ldi	r27, 0x01	; 1
      ce:	e0 e5       	ldi	r30, 0x50	; 80
      d0:	f1 e1       	ldi	r31, 0x11	; 17
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <__do_copy_data+0x10>
      d4:	05 90       	lpm	r0, Z+
      d6:	0d 92       	st	X+, r0
      d8:	ae 30       	cpi	r26, 0x0E	; 14
      da:	b1 07       	cpc	r27, r17
      dc:	d9 f7       	brne	.-10     	; 0xd4 <__do_copy_data+0xc>

000000de <__do_clear_bss>:
      de:	21 e0       	ldi	r18, 0x01	; 1
      e0:	ae e0       	ldi	r26, 0x0E	; 14
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	01 c0       	rjmp	.+2      	; 0xe8 <.do_clear_bss_start>

000000e6 <.do_clear_bss_loop>:
      e6:	1d 92       	st	X+, r1

000000e8 <.do_clear_bss_start>:
      e8:	af 38       	cpi	r26, 0x8F	; 143
      ea:	b2 07       	cpc	r27, r18
      ec:	e1 f7       	brne	.-8      	; 0xe6 <.do_clear_bss_loop>
      ee:	0e 94 f6 03 	call	0x7ec	; 0x7ec <main>
      f2:	0c 94 a6 08 	jmp	0x114c	; 0x114c <_exit>

000000f6 <__bad_interrupt>:
      f6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fa <show_err>:
      fa:	2f ef       	ldi	r18, 0xFF	; 255
      fc:	81 ee       	ldi	r24, 0xE1	; 225
      fe:	94 e0       	ldi	r25, 0x04	; 4
     100:	21 50       	subi	r18, 0x01	; 1
     102:	80 40       	sbci	r24, 0x00	; 0
     104:	90 40       	sbci	r25, 0x00	; 0
     106:	e1 f7       	brne	.-8      	; 0x100 <show_err+0x6>
     108:	00 c0       	rjmp	.+0      	; 0x10a <show_err+0x10>
     10a:	00 00       	nop
     10c:	46 9a       	sbi	0x08, 6	; 8
     10e:	2f e7       	ldi	r18, 0x7F	; 127
     110:	8f e4       	ldi	r24, 0x4F	; 79
     112:	92 e1       	ldi	r25, 0x12	; 18
     114:	21 50       	subi	r18, 0x01	; 1
     116:	80 40       	sbci	r24, 0x00	; 0
     118:	90 40       	sbci	r25, 0x00	; 0
     11a:	e1 f7       	brne	.-8      	; 0x114 <show_err+0x1a>
     11c:	00 c0       	rjmp	.+0      	; 0x11e <show_err+0x24>
     11e:	00 00       	nop
     120:	46 98       	cbi	0x08, 6	; 8
     122:	08 95       	ret

00000124 <show_succ>:
     124:	2f ef       	ldi	r18, 0xFF	; 255
     126:	81 ee       	ldi	r24, 0xE1	; 225
     128:	94 e0       	ldi	r25, 0x04	; 4
     12a:	21 50       	subi	r18, 0x01	; 1
     12c:	80 40       	sbci	r24, 0x00	; 0
     12e:	90 40       	sbci	r25, 0x00	; 0
     130:	e1 f7       	brne	.-8      	; 0x12a <show_succ+0x6>
     132:	00 c0       	rjmp	.+0      	; 0x134 <show_succ+0x10>
     134:	00 00       	nop
     136:	46 9a       	sbi	0x08, 6	; 8
     138:	2f ef       	ldi	r18, 0xFF	; 255
     13a:	81 ee       	ldi	r24, 0xE1	; 225
     13c:	94 e0       	ldi	r25, 0x04	; 4
     13e:	21 50       	subi	r18, 0x01	; 1
     140:	80 40       	sbci	r24, 0x00	; 0
     142:	90 40       	sbci	r25, 0x00	; 0
     144:	e1 f7       	brne	.-8      	; 0x13e <show_succ+0x1a>
     146:	00 c0       	rjmp	.+0      	; 0x148 <show_succ+0x24>
     148:	00 00       	nop
     14a:	46 98       	cbi	0x08, 6	; 8
     14c:	08 95       	ret

0000014e <BNO_MUX_Select>:
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	88 30       	cpi	r24, 0x08	; 8
     152:	91 05       	cpc	r25, r1
     154:	d0 f4       	brcc	.+52     	; 0x18a <BNO_MUX_Select+0x3c>
     156:	fc 01       	movw	r30, r24
     158:	ea 5a       	subi	r30, 0xAA	; 170
     15a:	ff 4f       	sbci	r31, 0xFF	; 255
     15c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__tablejump2__>
     160:	5c 9a       	sbi	0x0b, 4	; 11
     162:	01 c0       	rjmp	.+2      	; 0x166 <BNO_MUX_Select+0x18>
     164:	5c 98       	cbi	0x0b, 4	; 11
     166:	5e 98       	cbi	0x0b, 6	; 11
     168:	0f c0       	rjmp	.+30     	; 0x188 <BNO_MUX_Select+0x3a>
     16a:	5c 98       	cbi	0x0b, 4	; 11
     16c:	06 c0       	rjmp	.+12     	; 0x17a <BNO_MUX_Select+0x2c>
     16e:	5c 9a       	sbi	0x0b, 4	; 11
     170:	01 c0       	rjmp	.+2      	; 0x174 <BNO_MUX_Select+0x26>
     172:	5c 98       	cbi	0x0b, 4	; 11
     174:	5e 98       	cbi	0x0b, 6	; 11
     176:	02 c0       	rjmp	.+4      	; 0x17c <BNO_MUX_Select+0x2e>
     178:	5c 9a       	sbi	0x0b, 4	; 11
     17a:	5e 9a       	sbi	0x0b, 6	; 11
     17c:	5f 98       	cbi	0x0b, 7	; 11
     17e:	05 c0       	rjmp	.+10     	; 0x18a <BNO_MUX_Select+0x3c>
     180:	5c 98       	cbi	0x0b, 4	; 11
     182:	01 c0       	rjmp	.+2      	; 0x186 <BNO_MUX_Select+0x38>
     184:	5c 9a       	sbi	0x0b, 4	; 11
     186:	5e 9a       	sbi	0x0b, 6	; 11
     188:	5f 9a       	sbi	0x0b, 7	; 11
     18a:	82 e0       	ldi	r24, 0x02	; 2
     18c:	8a 95       	dec	r24
     18e:	f1 f7       	brne	.-4      	; 0x18c <BNO_MUX_Select+0x3e>
     190:	00 c0       	rjmp	.+0      	; 0x192 <BNO_MUX_Select+0x44>
     192:	08 95       	ret

00000194 <BNO_Init>:
     194:	ff 92       	push	r15
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	47 9a       	sbi	0x08, 7	; 8
     1a0:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
     1a4:	c0 e0       	ldi	r28, 0x00	; 0
     1a6:	d0 e0       	ldi	r29, 0x00	; 0
     1a8:	01 e0       	ldi	r16, 0x01	; 1
     1aa:	10 e0       	ldi	r17, 0x00	; 0
     1ac:	8c 2f       	mov	r24, r28
     1ae:	0e 94 a7 00 	call	0x14e	; 0x14e <BNO_MUX_Select>
     1b2:	46 9a       	sbi	0x08, 6	; 8
     1b4:	6a e0       	ldi	r22, 0x0A	; 10
     1b6:	80 e5       	ldi	r24, 0x50	; 80
     1b8:	0e 94 2c 08 	call	0x1058	; 0x1058 <i2c_start_wait_for>
     1bc:	88 23       	and	r24, r24
     1be:	19 f0       	breq	.+6      	; 0x1c6 <BNO_Init+0x32>
     1c0:	0e 94 7d 00 	call	0xfa	; 0xfa <show_err>
     1c4:	2a c0       	rjmp	.+84     	; 0x21a <BNO_Init+0x86>
     1c6:	46 98       	cbi	0x08, 6	; 8
     1c8:	80 e0       	ldi	r24, 0x00	; 0
     1ca:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     1ce:	81 e5       	ldi	r24, 0x51	; 81
     1d0:	0e 94 5d 08 	call	0x10ba	; 0x10ba <i2c_rep_start>
     1d4:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     1d8:	f8 2e       	mov	r15, r24
     1da:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     1de:	20 ea       	ldi	r18, 0xA0	; 160
     1e0:	f2 12       	cpse	r15, r18
     1e2:	ee cf       	rjmp	.-36     	; 0x1c0 <BNO_Init+0x2c>
     1e4:	6a e0       	ldi	r22, 0x0A	; 10
     1e6:	80 e5       	ldi	r24, 0x50	; 80
     1e8:	0e 94 2c 08 	call	0x1058	; 0x1058 <i2c_start_wait_for>
     1ec:	81 11       	cpse	r24, r1
     1ee:	e8 cf       	rjmp	.-48     	; 0x1c0 <BNO_Init+0x2c>
     1f0:	8f e3       	ldi	r24, 0x3F	; 63
     1f2:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     1f6:	80 e2       	ldi	r24, 0x20	; 32
     1f8:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     1fc:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     200:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__data_end>
     204:	c8 01       	movw	r24, r16
     206:	0c 2e       	mov	r0, r28
     208:	01 c0       	rjmp	.+2      	; 0x20c <BNO_Init+0x78>
     20a:	88 0f       	add	r24, r24
     20c:	0a 94       	dec	r0
     20e:	ea f7       	brpl	.-6      	; 0x20a <BNO_Init+0x76>
     210:	82 2b       	or	r24, r18
     212:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
     216:	0e 94 92 00 	call	0x124	; 0x124 <show_succ>
     21a:	21 96       	adiw	r28, 0x01	; 1
     21c:	c6 30       	cpi	r28, 0x06	; 6
     21e:	d1 05       	cpc	r29, r1
     220:	29 f6       	brne	.-118    	; 0x1ac <BNO_Init+0x18>
     222:	8f e7       	ldi	r24, 0x7F	; 127
     224:	9f e4       	ldi	r25, 0x4F	; 79
     226:	22 e1       	ldi	r18, 0x12	; 18
     228:	81 50       	subi	r24, 0x01	; 1
     22a:	90 40       	sbci	r25, 0x00	; 0
     22c:	20 40       	sbci	r18, 0x00	; 0
     22e:	e1 f7       	brne	.-8      	; 0x228 <BNO_Init+0x94>
     230:	00 c0       	rjmp	.+0      	; 0x232 <BNO_Init+0x9e>
     232:	00 00       	nop
     234:	c0 e0       	ldi	r28, 0x00	; 0
     236:	d0 e0       	ldi	r29, 0x00	; 0
     238:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	0c 2e       	mov	r0, r28
     240:	02 c0       	rjmp	.+4      	; 0x246 <BNO_Init+0xb2>
     242:	95 95       	asr	r25
     244:	87 95       	ror	r24
     246:	0a 94       	dec	r0
     248:	e2 f7       	brpl	.-8      	; 0x242 <BNO_Init+0xae>
     24a:	80 ff       	sbrs	r24, 0
     24c:	34 c0       	rjmp	.+104    	; 0x2b6 <BNO_Init+0x122>
     24e:	8c 2f       	mov	r24, r28
     250:	0e 94 a7 00 	call	0x14e	; 0x14e <BNO_MUX_Select>
     254:	ce 01       	movw	r24, r28
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	05 97       	sbiw	r24, 0x05	; 5
     25a:	10 f5       	brcc	.+68     	; 0x2a0 <BNO_Init+0x10c>
     25c:	80 e5       	ldi	r24, 0x50	; 80
     25e:	0e 94 05 08 	call	0x100a	; 0x100a <i2c_start_wait>
     262:	81 e4       	ldi	r24, 0x41	; 65
     264:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     268:	81 e2       	ldi	r24, 0x21	; 33
     26a:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     26e:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     272:	8f e1       	ldi	r24, 0x1F	; 31
     274:	9e e4       	ldi	r25, 0x4E	; 78
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <BNO_Init+0xe2>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <BNO_Init+0xe8>
     27c:	00 00       	nop
     27e:	80 e5       	ldi	r24, 0x50	; 80
     280:	0e 94 05 08 	call	0x100a	; 0x100a <i2c_start_wait>
     284:	82 e4       	ldi	r24, 0x42	; 66
     286:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     28a:	84 e0       	ldi	r24, 0x04	; 4
     28c:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     290:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     294:	8f e1       	ldi	r24, 0x1F	; 31
     296:	9e e4       	ldi	r25, 0x4E	; 78
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <BNO_Init+0x104>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <BNO_Init+0x10a>
     29e:	00 00       	nop
     2a0:	80 e5       	ldi	r24, 0x50	; 80
     2a2:	0e 94 05 08 	call	0x100a	; 0x100a <i2c_start_wait>
     2a6:	8d e3       	ldi	r24, 0x3D	; 61
     2a8:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     2ac:	8c e0       	ldi	r24, 0x0C	; 12
     2ae:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     2b2:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     2b6:	21 96       	adiw	r28, 0x01	; 1
     2b8:	c6 30       	cpi	r28, 0x06	; 6
     2ba:	d1 05       	cpc	r29, r1
     2bc:	09 f0       	breq	.+2      	; 0x2c0 <BNO_Init+0x12c>
     2be:	bc cf       	rjmp	.-136    	; 0x238 <BNO_Init+0xa4>
     2c0:	9f ef       	ldi	r25, 0xFF	; 255
     2c2:	20 e7       	ldi	r18, 0x70	; 112
     2c4:	32 e0       	ldi	r19, 0x02	; 2
     2c6:	91 50       	subi	r25, 0x01	; 1
     2c8:	20 40       	sbci	r18, 0x00	; 0
     2ca:	30 40       	sbci	r19, 0x00	; 0
     2cc:	e1 f7       	brne	.-8      	; 0x2c6 <BNO_Init+0x132>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <BNO_Init+0x13c>
     2d0:	00 00       	nop
     2d2:	47 98       	cbi	0x08, 7	; 8
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	1f 91       	pop	r17
     2da:	0f 91       	pop	r16
     2dc:	ff 90       	pop	r15
     2de:	08 95       	ret

000002e0 <BNO_Read_Quaternion_Compressed>:
     2e0:	0f 93       	push	r16
     2e2:	1f 93       	push	r17
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	28 97       	sbiw	r28, 0x08	; 8
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	de bf       	out	0x3e, r29	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	cd bf       	out	0x3d, r28	; 61
     2f8:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__data_end>
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	08 2e       	mov	r0, r24
     300:	02 c0       	rjmp	.+4      	; 0x306 <BNO_Read_Quaternion_Compressed+0x26>
     302:	35 95       	asr	r19
     304:	27 95       	ror	r18
     306:	0a 94       	dec	r0
     308:	e2 f7       	brpl	.-8      	; 0x302 <BNO_Read_Quaternion_Compressed+0x22>
     30a:	20 ff       	sbrs	r18, 0
     30c:	6e c0       	rjmp	.+220    	; 0x3ea <BNO_Read_Quaternion_Compressed+0x10a>
     30e:	8b 01       	movw	r16, r22
     310:	0e 94 a7 00 	call	0x14e	; 0x14e <BNO_MUX_Select>
     314:	80 e5       	ldi	r24, 0x50	; 80
     316:	0e 94 05 08 	call	0x100a	; 0x100a <i2c_start_wait>
     31a:	80 e2       	ldi	r24, 0x20	; 32
     31c:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     320:	81 e5       	ldi	r24, 0x51	; 81
     322:	0e 94 5d 08 	call	0x10ba	; 0x10ba <i2c_rep_start>
     326:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     32a:	89 83       	std	Y+1, r24	; 0x01
     32c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     330:	8a 83       	std	Y+2, r24	; 0x02
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	9a 81       	ldd	r25, Y+2	; 0x02
     336:	97 ff       	sbrs	r25, 7
     338:	34 c0       	rjmp	.+104    	; 0x3a2 <BNO_Read_Quaternion_Compressed+0xc2>
     33a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     33e:	8b 83       	std	Y+3, r24	; 0x03
     340:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     344:	8c 83       	std	Y+4, r24	; 0x04
     346:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     34a:	8d 83       	std	Y+5, r24	; 0x05
     34c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     350:	8e 83       	std	Y+6, r24	; 0x06
     352:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     356:	8f 83       	std	Y+7, r24	; 0x07
     358:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     35c:	88 87       	std	Y+8, r24	; 0x08
     35e:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     362:	4b 81       	ldd	r20, Y+3	; 0x03
     364:	5c 81       	ldd	r21, Y+4	; 0x04
     366:	51 95       	neg	r21
     368:	41 95       	neg	r20
     36a:	51 09       	sbc	r21, r1
     36c:	5c 83       	std	Y+4, r21	; 0x04
     36e:	4b 83       	std	Y+3, r20	; 0x03
     370:	2d 81       	ldd	r18, Y+5	; 0x05
     372:	3e 81       	ldd	r19, Y+6	; 0x06
     374:	31 95       	neg	r19
     376:	21 95       	neg	r18
     378:	31 09       	sbc	r19, r1
     37a:	3e 83       	std	Y+6, r19	; 0x06
     37c:	2d 83       	std	Y+5, r18	; 0x05
     37e:	8f 81       	ldd	r24, Y+7	; 0x07
     380:	98 85       	ldd	r25, Y+8	; 0x08
     382:	91 95       	neg	r25
     384:	81 95       	neg	r24
     386:	91 09       	sbc	r25, r1
     388:	98 87       	std	Y+8, r25	; 0x08
     38a:	8f 83       	std	Y+7, r24	; 0x07
     38c:	f8 01       	movw	r30, r16
     38e:	40 83       	st	Z, r20
     390:	9c 81       	ldd	r25, Y+4	; 0x04
     392:	91 83       	std	Z+1, r25	; 0x01
     394:	22 83       	std	Z+2, r18	; 0x02
     396:	9e 81       	ldd	r25, Y+6	; 0x06
     398:	93 83       	std	Z+3, r25	; 0x03
     39a:	84 83       	std	Z+4, r24	; 0x04
     39c:	88 85       	ldd	r24, Y+8	; 0x08
     39e:	85 83       	std	Z+5, r24	; 0x05
     3a0:	24 c0       	rjmp	.+72     	; 0x3ea <BNO_Read_Quaternion_Compressed+0x10a>
     3a2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     3a6:	f8 01       	movw	r30, r16
     3a8:	80 83       	st	Z, r24
     3aa:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     3ae:	f8 01       	movw	r30, r16
     3b0:	81 83       	std	Z+1, r24	; 0x01
     3b2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     3b6:	f8 01       	movw	r30, r16
     3b8:	82 83       	std	Z+2, r24	; 0x02
     3ba:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     3be:	f8 01       	movw	r30, r16
     3c0:	83 83       	std	Z+3, r24	; 0x03
     3c2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     3c6:	f8 01       	movw	r30, r16
     3c8:	84 83       	std	Z+4, r24	; 0x04
     3ca:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     3ce:	f8 01       	movw	r30, r16
     3d0:	85 83       	std	Z+5, r24	; 0x05
     3d2:	28 96       	adiw	r28, 0x08	; 8
     3d4:	0f b6       	in	r0, 0x3f	; 63
     3d6:	f8 94       	cli
     3d8:	de bf       	out	0x3e, r29	; 62
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	cd bf       	out	0x3d, r28	; 61
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	0c 94 5f 08 	jmp	0x10be	; 0x10be <i2c_stop>
     3ea:	28 96       	adiw	r28, 0x08	; 8
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	f8 94       	cli
     3f0:	de bf       	out	0x3e, r29	; 62
     3f2:	0f be       	out	0x3f, r0	; 63
     3f4:	cd bf       	out	0x3d, r28	; 61
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	1f 91       	pop	r17
     3fc:	0f 91       	pop	r16
     3fe:	08 95       	ret

00000400 <BNO_Read_Quaternion_LinAcc_Compressed>:
     400:	ef 92       	push	r14
     402:	ff 92       	push	r15
     404:	0f 93       	push	r16
     406:	1f 93       	push	r17
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	28 97       	sbiw	r28, 0x08	; 8
     412:	0f b6       	in	r0, 0x3f	; 63
     414:	f8 94       	cli
     416:	de bf       	out	0x3e, r29	; 62
     418:	0f be       	out	0x3f, r0	; 63
     41a:	cd bf       	out	0x3d, r28	; 61
     41c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__data_end>
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	08 2e       	mov	r0, r24
     424:	02 c0       	rjmp	.+4      	; 0x42a <BNO_Read_Quaternion_LinAcc_Compressed+0x2a>
     426:	35 95       	asr	r19
     428:	27 95       	ror	r18
     42a:	0a 94       	dec	r0
     42c:	e2 f7       	brpl	.-8      	; 0x426 <BNO_Read_Quaternion_LinAcc_Compressed+0x26>
     42e:	20 ff       	sbrs	r18, 0
     430:	a1 c0       	rjmp	.+322    	; 0x574 <BNO_Read_Quaternion_LinAcc_Compressed+0x174>
     432:	8a 01       	movw	r16, r20
     434:	7b 01       	movw	r14, r22
     436:	0e 94 a7 00 	call	0x14e	; 0x14e <BNO_MUX_Select>
     43a:	80 e5       	ldi	r24, 0x50	; 80
     43c:	0e 94 05 08 	call	0x100a	; 0x100a <i2c_start_wait>
     440:	80 e2       	ldi	r24, 0x20	; 32
     442:	0e 94 67 08 	call	0x10ce	; 0x10ce <i2c_write>
     446:	81 e5       	ldi	r24, 0x51	; 81
     448:	0e 94 5d 08 	call	0x10ba	; 0x10ba <i2c_rep_start>
     44c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     450:	89 83       	std	Y+1, r24	; 0x01
     452:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     456:	8a 83       	std	Y+2, r24	; 0x02
     458:	89 81       	ldd	r24, Y+1	; 0x01
     45a:	9a 81       	ldd	r25, Y+2	; 0x02
     45c:	97 ff       	sbrs	r25, 7
     45e:	4c c0       	rjmp	.+152    	; 0x4f8 <BNO_Read_Quaternion_LinAcc_Compressed+0xf8>
     460:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     464:	8b 83       	std	Y+3, r24	; 0x03
     466:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     46a:	8c 83       	std	Y+4, r24	; 0x04
     46c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     470:	8d 83       	std	Y+5, r24	; 0x05
     472:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     476:	8e 83       	std	Y+6, r24	; 0x06
     478:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     47c:	8f 83       	std	Y+7, r24	; 0x07
     47e:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     482:	88 87       	std	Y+8, r24	; 0x08
     484:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     488:	f8 01       	movw	r30, r16
     48a:	80 83       	st	Z, r24
     48c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     490:	f8 01       	movw	r30, r16
     492:	81 83       	std	Z+1, r24	; 0x01
     494:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     498:	f8 01       	movw	r30, r16
     49a:	82 83       	std	Z+2, r24	; 0x02
     49c:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     4a0:	f8 01       	movw	r30, r16
     4a2:	83 83       	std	Z+3, r24	; 0x03
     4a4:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     4a8:	f8 01       	movw	r30, r16
     4aa:	84 83       	std	Z+4, r24	; 0x04
     4ac:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     4b0:	f8 01       	movw	r30, r16
     4b2:	85 83       	std	Z+5, r24	; 0x05
     4b4:	0e 94 5f 08 	call	0x10be	; 0x10be <i2c_stop>
     4b8:	4b 81       	ldd	r20, Y+3	; 0x03
     4ba:	5c 81       	ldd	r21, Y+4	; 0x04
     4bc:	51 95       	neg	r21
     4be:	41 95       	neg	r20
     4c0:	51 09       	sbc	r21, r1
     4c2:	5c 83       	std	Y+4, r21	; 0x04
     4c4:	4b 83       	std	Y+3, r20	; 0x03
     4c6:	2d 81       	ldd	r18, Y+5	; 0x05
     4c8:	3e 81       	ldd	r19, Y+6	; 0x06
     4ca:	31 95       	neg	r19
     4cc:	21 95       	neg	r18
     4ce:	31 09       	sbc	r19, r1
     4d0:	3e 83       	std	Y+6, r19	; 0x06
     4d2:	2d 83       	std	Y+5, r18	; 0x05
     4d4:	8f 81       	ldd	r24, Y+7	; 0x07
     4d6:	98 85       	ldd	r25, Y+8	; 0x08
     4d8:	91 95       	neg	r25
     4da:	81 95       	neg	r24
     4dc:	91 09       	sbc	r25, r1
     4de:	98 87       	std	Y+8, r25	; 0x08
     4e0:	8f 83       	std	Y+7, r24	; 0x07
     4e2:	f7 01       	movw	r30, r14
     4e4:	40 83       	st	Z, r20
     4e6:	9c 81       	ldd	r25, Y+4	; 0x04
     4e8:	91 83       	std	Z+1, r25	; 0x01
     4ea:	22 83       	std	Z+2, r18	; 0x02
     4ec:	9e 81       	ldd	r25, Y+6	; 0x06
     4ee:	93 83       	std	Z+3, r25	; 0x03
     4f0:	84 83       	std	Z+4, r24	; 0x04
     4f2:	88 85       	ldd	r24, Y+8	; 0x08
     4f4:	85 83       	std	Z+5, r24	; 0x05
     4f6:	3e c0       	rjmp	.+124    	; 0x574 <BNO_Read_Quaternion_LinAcc_Compressed+0x174>
     4f8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     4fc:	f7 01       	movw	r30, r14
     4fe:	80 83       	st	Z, r24
     500:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     504:	f7 01       	movw	r30, r14
     506:	81 83       	std	Z+1, r24	; 0x01
     508:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     50c:	f7 01       	movw	r30, r14
     50e:	82 83       	std	Z+2, r24	; 0x02
     510:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     514:	f7 01       	movw	r30, r14
     516:	83 83       	std	Z+3, r24	; 0x03
     518:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     51c:	f7 01       	movw	r30, r14
     51e:	84 83       	std	Z+4, r24	; 0x04
     520:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     524:	f7 01       	movw	r30, r14
     526:	85 83       	std	Z+5, r24	; 0x05
     528:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     52c:	f8 01       	movw	r30, r16
     52e:	80 83       	st	Z, r24
     530:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     534:	f8 01       	movw	r30, r16
     536:	81 83       	std	Z+1, r24	; 0x01
     538:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     53c:	f8 01       	movw	r30, r16
     53e:	82 83       	std	Z+2, r24	; 0x02
     540:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     544:	f8 01       	movw	r30, r16
     546:	83 83       	std	Z+3, r24	; 0x03
     548:	0e 94 78 08 	call	0x10f0	; 0x10f0 <i2c_readAck>
     54c:	f8 01       	movw	r30, r16
     54e:	84 83       	std	Z+4, r24	; 0x04
     550:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_readNak>
     554:	f8 01       	movw	r30, r16
     556:	85 83       	std	Z+5, r24	; 0x05
     558:	28 96       	adiw	r28, 0x08	; 8
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	f8 94       	cli
     55e:	de bf       	out	0x3e, r29	; 62
     560:	0f be       	out	0x3f, r0	; 63
     562:	cd bf       	out	0x3d, r28	; 61
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	1f 91       	pop	r17
     56a:	0f 91       	pop	r16
     56c:	ff 90       	pop	r15
     56e:	ef 90       	pop	r14
     570:	0c 94 5f 08 	jmp	0x10be	; 0x10be <i2c_stop>
     574:	28 96       	adiw	r28, 0x08	; 8
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	1f 91       	pop	r17
     586:	0f 91       	pop	r16
     588:	ff 90       	pop	r15
     58a:	ef 90       	pop	r14
     58c:	08 95       	ret

0000058e <AVR_Init>:
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	80 e8       	ldi	r24, 0x80	; 128
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     59a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     59e:	0f be       	out	0x3f, r0	; 63
     5a0:	51 9a       	sbi	0x0a, 1	; 10
     5a2:	50 98       	cbi	0x0a, 0	; 10
     5a4:	3e 9a       	sbi	0x07, 6	; 7
     5a6:	3f 9a       	sbi	0x07, 7	; 7
     5a8:	54 9a       	sbi	0x0a, 4	; 10
     5aa:	56 9a       	sbi	0x0a, 6	; 10
     5ac:	57 9a       	sbi	0x0a, 7	; 10
     5ae:	86 e0       	ldi	r24, 0x06	; 6
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	46 98       	cbi	0x08, 6	; 8
     5b4:	47 9a       	sbi	0x08, 7	; 8
     5b6:	2f ef       	ldi	r18, 0xFF	; 255
     5b8:	30 e7       	ldi	r19, 0x70	; 112
     5ba:	42 e0       	ldi	r20, 0x02	; 2
     5bc:	21 50       	subi	r18, 0x01	; 1
     5be:	30 40       	sbci	r19, 0x00	; 0
     5c0:	40 40       	sbci	r20, 0x00	; 0
     5c2:	e1 f7       	brne	.-8      	; 0x5bc <AVR_Init+0x2e>
     5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <AVR_Init+0x38>
     5c6:	00 00       	nop
     5c8:	46 9a       	sbi	0x08, 6	; 8
     5ca:	47 98       	cbi	0x08, 7	; 8
     5cc:	2f ef       	ldi	r18, 0xFF	; 255
     5ce:	30 e7       	ldi	r19, 0x70	; 112
     5d0:	42 e0       	ldi	r20, 0x02	; 2
     5d2:	21 50       	subi	r18, 0x01	; 1
     5d4:	30 40       	sbci	r19, 0x00	; 0
     5d6:	40 40       	sbci	r20, 0x00	; 0
     5d8:	e1 f7       	brne	.-8      	; 0x5d2 <AVR_Init+0x44>
     5da:	00 c0       	rjmp	.+0      	; 0x5dc <AVR_Init+0x4e>
     5dc:	00 00       	nop
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	41 f7       	brne	.-48     	; 0x5b2 <AVR_Init+0x24>
     5e2:	46 98       	cbi	0x08, 6	; 8
     5e4:	47 98       	cbi	0x08, 7	; 8
     5e6:	8f ef       	ldi	r24, 0xFF	; 255
     5e8:	90 e7       	ldi	r25, 0x70	; 112
     5ea:	22 e0       	ldi	r18, 0x02	; 2
     5ec:	81 50       	subi	r24, 0x01	; 1
     5ee:	90 40       	sbci	r25, 0x00	; 0
     5f0:	20 40       	sbci	r18, 0x00	; 0
     5f2:	e1 f7       	brne	.-8      	; 0x5ec <AVR_Init+0x5e>
     5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <AVR_Init+0x68>
     5f6:	00 00       	nop
     5f8:	08 95       	ret

000005fa <UART_Init>:
     5fa:	83 e3       	ldi	r24, 0x33	; 51
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__DATA_REGION_ORIGIN__+0x6d>
     602:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__DATA_REGION_ORIGIN__+0x6c>
     606:	e8 ec       	ldi	r30, 0xC8	; 200
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	80 81       	ld	r24, Z
     60c:	8d 7f       	andi	r24, 0xFD	; 253
     60e:	80 83       	st	Z, r24
     610:	ea ec       	ldi	r30, 0xCA	; 202
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	80 81       	ld	r24, Z
     616:	86 60       	ori	r24, 0x06	; 6
     618:	80 83       	st	Z, r24
     61a:	e9 ec       	ldi	r30, 0xC9	; 201
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	80 81       	ld	r24, Z
     620:	88 61       	ori	r24, 0x18	; 24
     622:	80 83       	st	Z, r24
     624:	08 95       	ret

00000626 <__vector_7>:
     626:	1f 92       	push	r1
     628:	0f 92       	push	r0
     62a:	0f b6       	in	r0, 0x3f	; 63
     62c:	0f 92       	push	r0
     62e:	11 24       	eor	r1, r1
     630:	2f 93       	push	r18
     632:	3f 93       	push	r19
     634:	4f 93       	push	r20
     636:	5f 93       	push	r21
     638:	6f 93       	push	r22
     63a:	7f 93       	push	r23
     63c:	8f 93       	push	r24
     63e:	9f 93       	push	r25
     640:	af 93       	push	r26
     642:	bf 93       	push	r27
     644:	ef 93       	push	r30
     646:	ff 93       	push	r31
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	00 d0       	rcall	.+0      	; 0x64e <__vector_7+0x28>
     64e:	cd b7       	in	r28, 0x3d	; 61
     650:	de b7       	in	r29, 0x3e	; 62
     652:	f8 94       	cli
     654:	0e 94 47 05 	call	0xa8e	; 0xa8e <nrf_stopListening>
     658:	ae 01       	movw	r20, r28
     65a:	4f 5f       	subi	r20, 0xFF	; 255
     65c:	5f 4f       	sbci	r21, 0xFF	; 255
     65e:	be 01       	movw	r22, r28
     660:	6e 5f       	subi	r22, 0xFE	; 254
     662:	7f 4f       	sbci	r23, 0xFF	; 255
     664:	8f e0       	ldi	r24, 0x0F	; 15
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e 94 a3 05 	call	0xb46	; 0xb46 <nrf_readRXData>
     66c:	87 ec       	ldi	r24, 0xC7	; 199
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	01 97       	sbiw	r24, 0x01	; 1
     672:	f1 f7       	brne	.-4      	; 0x670 <__vector_7+0x4a>
     674:	00 c0       	rjmp	.+0      	; 0x676 <__vector_7+0x50>
     676:	00 00       	nop
     678:	60 e4       	ldi	r22, 0x40	; 64
     67a:	87 e0       	ldi	r24, 0x07	; 7
     67c:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <SPI_Write_Byte>
     680:	0f 90       	pop	r0
     682:	0f 90       	pop	r0
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	ff 91       	pop	r31
     68a:	ef 91       	pop	r30
     68c:	bf 91       	pop	r27
     68e:	af 91       	pop	r26
     690:	9f 91       	pop	r25
     692:	8f 91       	pop	r24
     694:	7f 91       	pop	r23
     696:	6f 91       	pop	r22
     698:	5f 91       	pop	r21
     69a:	4f 91       	pop	r20
     69c:	3f 91       	pop	r19
     69e:	2f 91       	pop	r18
     6a0:	0f 90       	pop	r0
     6a2:	0f be       	out	0x3f, r0	; 63
     6a4:	0f 90       	pop	r0
     6a6:	1f 90       	pop	r1
     6a8:	18 95       	reti

000006aa <initPackets>:
     6aa:	ef e4       	ldi	r30, 0x4F	; 79
     6ac:	f1 e0       	ldi	r31, 0x01	; 1
     6ae:	9b ea       	ldi	r25, 0xAB	; 171
     6b0:	90 83       	st	Z, r25
     6b2:	9d ec       	ldi	r25, 0xCD	; 205
     6b4:	91 83       	std	Z+1, r25	; 0x01
     6b6:	20 e1       	ldi	r18, 0x10	; 16
     6b8:	62 9f       	mul	r22, r18
     6ba:	b0 01       	movw	r22, r0
     6bc:	11 24       	eor	r1, r1
     6be:	61 60       	ori	r22, 0x01	; 1
     6c0:	62 83       	std	Z+2, r22	; 0x02
     6c2:	20 e2       	ldi	r18, 0x20	; 32
     6c4:	82 9f       	mul	r24, r18
     6c6:	c0 01       	movw	r24, r0
     6c8:	11 24       	eor	r1, r1
     6ca:	98 2f       	mov	r25, r24
     6cc:	91 60       	ori	r25, 0x01	; 1
     6ce:	93 83       	std	Z+3, r25	; 0x03
     6d0:	ef e6       	ldi	r30, 0x6F	; 111
     6d2:	f1 e0       	ldi	r31, 0x01	; 1
     6d4:	60 83       	st	Z, r22
     6d6:	98 2f       	mov	r25, r24
     6d8:	92 60       	ori	r25, 0x02	; 2
     6da:	91 83       	std	Z+1, r25	; 0x01
     6dc:	ef e2       	ldi	r30, 0x2F	; 47
     6de:	f1 e0       	ldi	r31, 0x01	; 1
     6e0:	60 83       	st	Z, r22
     6e2:	83 60       	ori	r24, 0x03	; 3
     6e4:	81 83       	std	Z+1, r24	; 0x01
     6e6:	08 95       	ret

000006e8 <updatePacketsSampleID>:
     6e8:	ef e4       	ldi	r30, 0x4F	; 79
     6ea:	f1 e0       	ldi	r31, 0x01	; 1
     6ec:	93 81       	ldd	r25, Z+3	; 0x03
     6ee:	84 e0       	ldi	r24, 0x04	; 4
     6f0:	89 0f       	add	r24, r25
     6f2:	8c 70       	andi	r24, 0x0C	; 12
     6f4:	93 7f       	andi	r25, 0xF3	; 243
     6f6:	98 2b       	or	r25, r24
     6f8:	93 83       	std	Z+3, r25	; 0x03
     6fa:	ef e6       	ldi	r30, 0x6F	; 111
     6fc:	f1 e0       	ldi	r31, 0x01	; 1
     6fe:	91 81       	ldd	r25, Z+1	; 0x01
     700:	93 7f       	andi	r25, 0xF3	; 243
     702:	98 2b       	or	r25, r24
     704:	91 83       	std	Z+1, r25	; 0x01
     706:	ef e2       	ldi	r30, 0x2F	; 47
     708:	f1 e0       	ldi	r31, 0x01	; 1
     70a:	91 81       	ldd	r25, Z+1	; 0x01
     70c:	93 7f       	andi	r25, 0xF3	; 243
     70e:	89 2b       	or	r24, r25
     710:	81 83       	std	Z+1, r24	; 0x01
     712:	08 95       	ret

00000714 <process_quat_linAcc>:
     714:	49 e5       	ldi	r20, 0x59	; 89
     716:	51 e0       	ldi	r21, 0x01	; 1
     718:	63 e5       	ldi	r22, 0x53	; 83
     71a:	71 e0       	ldi	r23, 0x01	; 1
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     722:	45 e6       	ldi	r20, 0x65	; 101
     724:	51 e0       	ldi	r21, 0x01	; 1
     726:	6f e5       	ldi	r22, 0x5F	; 95
     728:	71 e0       	ldi	r23, 0x01	; 1
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     730:	0e 94 29 05 	call	0xa52	; 0xa52 <nrf_flushRX>
     734:	4c e1       	ldi	r20, 0x1C	; 28
     736:	6f e4       	ldi	r22, 0x4F	; 79
     738:	71 e0       	ldi	r23, 0x01	; 1
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	0e 94 b7 07 	call	0xf6e	; 0xf6e <nrf_writeAckData>
     740:	47 e7       	ldi	r20, 0x77	; 119
     742:	51 e0       	ldi	r21, 0x01	; 1
     744:	61 e7       	ldi	r22, 0x71	; 113
     746:	71 e0       	ldi	r23, 0x01	; 1
     748:	82 e0       	ldi	r24, 0x02	; 2
     74a:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     74e:	43 e8       	ldi	r20, 0x83	; 131
     750:	51 e0       	ldi	r21, 0x01	; 1
     752:	6d e7       	ldi	r22, 0x7D	; 125
     754:	71 e0       	ldi	r23, 0x01	; 1
     756:	83 e0       	ldi	r24, 0x03	; 3
     758:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     75c:	4a e1       	ldi	r20, 0x1A	; 26
     75e:	6f e6       	ldi	r22, 0x6F	; 111
     760:	71 e0       	ldi	r23, 0x01	; 1
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	0e 94 b7 07 	call	0xf6e	; 0xf6e <nrf_writeAckData>
     768:	47 e3       	ldi	r20, 0x37	; 55
     76a:	51 e0       	ldi	r21, 0x01	; 1
     76c:	61 e3       	ldi	r22, 0x31	; 49
     76e:	71 e0       	ldi	r23, 0x01	; 1
     770:	84 e0       	ldi	r24, 0x04	; 4
     772:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     776:	43 e4       	ldi	r20, 0x43	; 67
     778:	51 e0       	ldi	r21, 0x01	; 1
     77a:	6d e3       	ldi	r22, 0x3D	; 61
     77c:	71 e0       	ldi	r23, 0x01	; 1
     77e:	85 e0       	ldi	r24, 0x05	; 5
     780:	0e 94 00 02 	call	0x400	; 0x400 <BNO_Read_Quaternion_LinAcc_Compressed>
     784:	4a e1       	ldi	r20, 0x1A	; 26
     786:	6f e2       	ldi	r22, 0x2F	; 47
     788:	71 e0       	ldi	r23, 0x01	; 1
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	0c 94 b7 07 	jmp	0xf6e	; 0xf6e <nrf_writeAckData>

00000790 <process_quat>:
     790:	63 e5       	ldi	r22, 0x53	; 83
     792:	71 e0       	ldi	r23, 0x01	; 1
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     79a:	69 e5       	ldi	r22, 0x59	; 89
     79c:	71 e0       	ldi	r23, 0x01	; 1
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     7a4:	6f e5       	ldi	r22, 0x5F	; 95
     7a6:	71 e0       	ldi	r23, 0x01	; 1
     7a8:	82 e0       	ldi	r24, 0x02	; 2
     7aa:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     7ae:	0e 94 29 05 	call	0xa52	; 0xa52 <nrf_flushRX>
     7b2:	46 e1       	ldi	r20, 0x16	; 22
     7b4:	6f e4       	ldi	r22, 0x4F	; 79
     7b6:	71 e0       	ldi	r23, 0x01	; 1
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	0e 94 b7 07 	call	0xf6e	; 0xf6e <nrf_writeAckData>
     7be:	61 e7       	ldi	r22, 0x71	; 113
     7c0:	71 e0       	ldi	r23, 0x01	; 1
     7c2:	83 e0       	ldi	r24, 0x03	; 3
     7c4:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     7c8:	67 e7       	ldi	r22, 0x77	; 119
     7ca:	71 e0       	ldi	r23, 0x01	; 1
     7cc:	84 e0       	ldi	r24, 0x04	; 4
     7ce:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     7d2:	6d e7       	ldi	r22, 0x7D	; 125
     7d4:	71 e0       	ldi	r23, 0x01	; 1
     7d6:	85 e0       	ldi	r24, 0x05	; 5
     7d8:	0e 94 70 01 	call	0x2e0	; 0x2e0 <BNO_Read_Quaternion_Compressed>
     7dc:	0e 94 29 05 	call	0xa52	; 0xa52 <nrf_flushRX>
     7e0:	44 e1       	ldi	r20, 0x14	; 20
     7e2:	6f e6       	ldi	r22, 0x6F	; 111
     7e4:	71 e0       	ldi	r23, 0x01	; 1
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	0c 94 b7 07 	jmp	0xf6e	; 0xf6e <nrf_writeAckData>

000007ec <main>:
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	00 d0       	rcall	.+0      	; 0x7f2 <main+0x6>
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <main+0x8>
     7f4:	1f 92       	push	r1
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	f8 94       	cli
     7fc:	0e 94 c7 02 	call	0x58e	; 0x58e <AVR_Init>
     800:	0e 94 dd 07 	call	0xfba	; 0xfba <i2c_init>
     804:	0e 94 fd 02 	call	0x5fa	; 0x5fa <UART_Init>
     808:	0e 94 bd 07 	call	0xf7a	; 0xf7a <SPI_Init>
     80c:	21 e0       	ldi	r18, 0x01	; 1
     80e:	45 e0       	ldi	r20, 0x05	; 5
     810:	61 e0       	ldi	r22, 0x01	; 1
     812:	89 e6       	ldi	r24, 0x69	; 105
     814:	0e 94 d0 06 	call	0xda0	; 0xda0 <nrf_init>
     818:	40 e0       	ldi	r20, 0x00	; 0
     81a:	61 e0       	ldi	r22, 0x01	; 1
     81c:	83 e0       	ldi	r24, 0x03	; 3
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	0e 94 7a 07 	call	0xef4	; 0xef4 <nrf_openDynamicTXPipe>
     824:	0e 94 ca 00 	call	0x194	; 0x194 <BNO_Init>
     828:	0e 94 2b 06 	call	0xc56	; 0xc56 <nrf_setModeRX>
     82c:	41 e0       	ldi	r20, 0x01	; 1
     82e:	61 e0       	ldi	r22, 0x01	; 1
     830:	81 e0       	ldi	r24, 0x01	; 1
     832:	0e 94 05 06 	call	0xc0a	; 0xc0a <nrf_maskIRQ>
     836:	1d 82       	std	Y+5, r1	; 0x05
     838:	60 e0       	ldi	r22, 0x00	; 0
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	0e 94 55 03 	call	0x6aa	; 0x6aa <initPackets>
     840:	46 9a       	sbi	0x08, 6	; 8
     842:	47 9a       	sbi	0x08, 7	; 8
     844:	2f ef       	ldi	r18, 0xFF	; 255
     846:	41 ee       	ldi	r20, 0xE1	; 225
     848:	54 e0       	ldi	r21, 0x04	; 4
     84a:	21 50       	subi	r18, 0x01	; 1
     84c:	40 40       	sbci	r20, 0x00	; 0
     84e:	50 40       	sbci	r21, 0x00	; 0
     850:	e1 f7       	brne	.-8      	; 0x84a <main+0x5e>
     852:	00 c0       	rjmp	.+0      	; 0x854 <main+0x68>
     854:	00 00       	nop
     856:	0e 94 3d 05 	call	0xa7a	; 0xa7a <nrf_flushAll>
     85a:	0e 94 27 06 	call	0xc4e	; 0xc4e <nrf_resetIRQFlags>
     85e:	43 e0       	ldi	r20, 0x03	; 3
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	71 e0       	ldi	r23, 0x01	; 1
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	0e 94 b7 07 	call	0xf6e	; 0xf6e <nrf_writeAckData>
     86a:	0e 94 41 05 	call	0xa82	; 0xa82 <nrf_startListening>
     86e:	8b e2       	ldi	r24, 0x2B	; 43
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	f1 f7       	brne	.-4      	; 0x872 <main+0x86>
     876:	00 c0       	rjmp	.+0      	; 0x878 <main+0x8c>
     878:	00 00       	nop
     87a:	ff 24       	eor	r15, r15
     87c:	f3 94       	inc	r15
     87e:	10 e0       	ldi	r17, 0x00	; 0
     880:	00 e0       	ldi	r16, 0x00	; 0
     882:	1d 82       	std	Y+5, r1	; 0x05
     884:	ae 01       	movw	r20, r28
     886:	4f 5f       	subi	r20, 0xFF	; 255
     888:	5f 4f       	sbci	r21, 0xFF	; 255
     88a:	be 01       	movw	r22, r28
     88c:	6e 5f       	subi	r22, 0xFE	; 254
     88e:	7f 4f       	sbci	r23, 0xFF	; 255
     890:	ce 01       	movw	r24, r28
     892:	03 96       	adiw	r24, 0x03	; 3
     894:	0e 94 0b 05 	call	0xa16	; 0xa16 <nrf_getIRQStatus>
     898:	88 23       	and	r24, r24
     89a:	99 f3       	breq	.-26     	; 0x882 <main+0x96>
     89c:	0e 94 27 06 	call	0xc4e	; 0xc4e <nrf_resetIRQFlags>
     8a0:	8b 81       	ldd	r24, Y+3	; 0x03
     8a2:	88 23       	and	r24, r24
     8a4:	01 f1       	breq	.+64     	; 0x8e6 <main+0xfa>
     8a6:	ff 20       	and	r15, r15
     8a8:	f1 f0       	breq	.+60     	; 0x8e6 <main+0xfa>
     8aa:	0e 94 81 05 	call	0xb02	; 0xb02 <nrf_dataAvailable>
     8ae:	88 23       	and	r24, r24
     8b0:	59 f0       	breq	.+22     	; 0x8c8 <main+0xdc>
     8b2:	ae 01       	movw	r20, r28
     8b4:	4c 5f       	subi	r20, 0xFC	; 252
     8b6:	5f 4f       	sbci	r21, 0xFF	; 255
     8b8:	be 01       	movw	r22, r28
     8ba:	6b 5f       	subi	r22, 0xFB	; 251
     8bc:	7f 4f       	sbci	r23, 0xFF	; 255
     8be:	8f e0       	ldi	r24, 0x0F	; 15
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	0e 94 a3 05 	call	0xb46	; 0xb46 <nrf_readRXData>
     8c6:	f1 cf       	rjmp	.-30     	; 0x8aa <main+0xbe>
     8c8:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <payload_RX>
     8cc:	f1 16       	cp	r15, r17
     8ce:	41 f0       	breq	.+16     	; 0x8e0 <main+0xf4>
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	9f 15       	cp	r25, r15
     8d4:	28 f0       	brcs	.+10     	; 0x8e0 <main+0xf4>
     8d6:	60 2f       	mov	r22, r16
     8d8:	8f 2d       	mov	r24, r15
     8da:	0e 94 55 03 	call	0x6aa	; 0x6aa <initPackets>
     8de:	1f 2d       	mov	r17, r15
     8e0:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <payload_RX+0x1>
     8e4:	f1 2c       	mov	r15, r1
     8e6:	8a 81       	ldd	r24, Y+2	; 0x02
     8e8:	88 23       	and	r24, r24
     8ea:	59 f2       	breq	.-106    	; 0x882 <main+0x96>
     8ec:	0e 94 47 05 	call	0xa8e	; 0xa8e <nrf_stopListening>
     8f0:	60 2f       	mov	r22, r16
     8f2:	81 2f       	mov	r24, r17
     8f4:	0e 94 55 03 	call	0x6aa	; 0x6aa <initPackets>
     8f8:	47 98       	cbi	0x08, 7	; 8
     8fa:	2f ef       	ldi	r18, 0xFF	; 255
     8fc:	44 e3       	ldi	r20, 0x34	; 52
     8fe:	5c e0       	ldi	r21, 0x0C	; 12
     900:	21 50       	subi	r18, 0x01	; 1
     902:	40 40       	sbci	r20, 0x00	; 0
     904:	50 40       	sbci	r21, 0x00	; 0
     906:	e1 f7       	brne	.-8      	; 0x900 <main+0x114>
     908:	00 c0       	rjmp	.+0      	; 0x90a <main+0x11e>
     90a:	00 00       	nop
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	20 2f       	mov	r18, r16
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	28 17       	cp	r18, r24
     916:	39 07       	cpc	r19, r25
     918:	b4 f0       	brlt	.+44     	; 0x946 <main+0x15a>
     91a:	47 9a       	sbi	0x08, 7	; 8
     91c:	6f ef       	ldi	r22, 0xFF	; 255
     91e:	41 ee       	ldi	r20, 0xE1	; 225
     920:	54 e0       	ldi	r21, 0x04	; 4
     922:	61 50       	subi	r22, 0x01	; 1
     924:	40 40       	sbci	r20, 0x00	; 0
     926:	50 40       	sbci	r21, 0x00	; 0
     928:	e1 f7       	brne	.-8      	; 0x922 <main+0x136>
     92a:	00 c0       	rjmp	.+0      	; 0x92c <main+0x140>
     92c:	00 00       	nop
     92e:	47 98       	cbi	0x08, 7	; 8
     930:	6f ef       	ldi	r22, 0xFF	; 255
     932:	41 ee       	ldi	r20, 0xE1	; 225
     934:	54 e0       	ldi	r21, 0x04	; 4
     936:	61 50       	subi	r22, 0x01	; 1
     938:	40 40       	sbci	r20, 0x00	; 0
     93a:	50 40       	sbci	r21, 0x00	; 0
     93c:	e1 f7       	brne	.-8      	; 0x936 <main+0x14a>
     93e:	00 c0       	rjmp	.+0      	; 0x940 <main+0x154>
     940:	00 00       	nop
     942:	01 96       	adiw	r24, 0x01	; 1
     944:	e7 cf       	rjmp	.-50     	; 0x914 <main+0x128>
     946:	46 98       	cbi	0x08, 6	; 8
     948:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <BS_data_address+0x4>
     94c:	40 e0       	ldi	r20, 0x00	; 0
     94e:	61 e0       	ldi	r22, 0x01	; 1
     950:	88 e0       	ldi	r24, 0x08	; 8
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 7a 07 	call	0xef4	; 0xef4 <nrf_openDynamicTXPipe>
     958:	0e 94 3d 05 	call	0xa7a	; 0xa7a <nrf_flushAll>
     95c:	0e 94 41 05 	call	0xa82	; 0xa82 <nrf_startListening>
     960:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     964:	82 60       	ori	r24, 0x02	; 2
     966:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     96a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     96e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     972:	11 30       	cpi	r17, 0x01	; 1
     974:	19 f4       	brne	.+6      	; 0x97c <main+0x190>
     976:	0e 94 8a 03 	call	0x714	; 0x714 <process_quat_linAcc>
     97a:	02 c0       	rjmp	.+4      	; 0x980 <main+0x194>
     97c:	0e 94 c8 03 	call	0x790	; 0x790 <process_quat>
     980:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     984:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     988:	80 31       	cpi	r24, 0x10	; 16
     98a:	97 42       	sbci	r25, 0x27	; 39
     98c:	28 f4       	brcc	.+10     	; 0x998 <main+0x1ac>
     98e:	62 e0       	ldi	r22, 0x02	; 2
     990:	6a 95       	dec	r22
     992:	f1 f7       	brne	.-4      	; 0x990 <main+0x1a4>
     994:	00 c0       	rjmp	.+0      	; 0x996 <main+0x1aa>
     996:	f4 cf       	rjmp	.-24     	; 0x980 <main+0x194>
     998:	0e 94 74 03 	call	0x6e8	; 0x6e8 <updatePacketsSampleID>
     99c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9a0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9a4:	1d 82       	std	Y+5, r1	; 0x05
     9a6:	ae 01       	movw	r20, r28
     9a8:	4f 5f       	subi	r20, 0xFF	; 255
     9aa:	5f 4f       	sbci	r21, 0xFF	; 255
     9ac:	be 01       	movw	r22, r28
     9ae:	6e 5f       	subi	r22, 0xFE	; 254
     9b0:	7f 4f       	sbci	r23, 0xFF	; 255
     9b2:	ce 01       	movw	r24, r28
     9b4:	03 96       	adiw	r24, 0x03	; 3
     9b6:	0e 94 0b 05 	call	0xa16	; 0xa16 <nrf_getIRQStatus>
     9ba:	88 23       	and	r24, r24
     9bc:	d1 f2       	breq	.-76     	; 0x972 <main+0x186>
     9be:	0e 94 27 06 	call	0xc4e	; 0xc4e <nrf_resetIRQFlags>
     9c2:	8b 81       	ldd	r24, Y+3	; 0x03
     9c4:	88 23       	and	r24, r24
     9c6:	a9 f2       	breq	.-86     	; 0x972 <main+0x186>
     9c8:	0e 94 81 05 	call	0xb02	; 0xb02 <nrf_dataAvailable>
     9cc:	88 23       	and	r24, r24
     9ce:	59 f0       	breq	.+22     	; 0x9e6 <main+0x1fa>
     9d0:	ae 01       	movw	r20, r28
     9d2:	4c 5f       	subi	r20, 0xFC	; 252
     9d4:	5f 4f       	sbci	r21, 0xFF	; 255
     9d6:	be 01       	movw	r22, r28
     9d8:	6b 5f       	subi	r22, 0xFB	; 251
     9da:	7f 4f       	sbci	r23, 0xFF	; 255
     9dc:	8f e0       	ldi	r24, 0x0F	; 15
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	0e 94 a3 05 	call	0xb46	; 0xb46 <nrf_readRXData>
     9e4:	f1 cf       	rjmp	.-30     	; 0x9c8 <main+0x1dc>
     9e6:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <payload_RX>
     9ea:	f1 16       	cp	r15, r17
     9ec:	11 f2       	breq	.-124    	; 0x972 <main+0x186>
     9ee:	41 e0       	ldi	r20, 0x01	; 1
     9f0:	4f 15       	cp	r20, r15
     9f2:	08 f4       	brcc	.+2      	; 0x9f6 <main+0x20a>
     9f4:	be cf       	rjmp	.-132    	; 0x972 <main+0x186>
     9f6:	60 2f       	mov	r22, r16
     9f8:	8f 2d       	mov	r24, r15
     9fa:	0e 94 55 03 	call	0x6aa	; 0x6aa <initPackets>
     9fe:	1f 2d       	mov	r17, r15
     a00:	b8 cf       	rjmp	.-144    	; 0x972 <main+0x186>

00000a02 <nrf_getStatus>:
     a02:	28 98       	cbi	0x05, 0	; 5
     a04:	8f ef       	ldi	r24, 0xFF	; 255
     a06:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     a0a:	28 9a       	sbi	0x05, 0	; 5
     a0c:	92 e0       	ldi	r25, 0x02	; 2
     a0e:	9a 95       	dec	r25
     a10:	f1 f7       	brne	.-4      	; 0xa0e <nrf_getStatus+0xc>
     a12:	00 c0       	rjmp	.+0      	; 0xa14 <nrf_getStatus+0x12>
     a14:	08 95       	ret

00000a16 <nrf_getIRQStatus>:
     a16:	ef 92       	push	r14
     a18:	ff 92       	push	r15
     a1a:	0f 93       	push	r16
     a1c:	1f 93       	push	r17
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	7c 01       	movw	r14, r24
     a24:	8b 01       	movw	r16, r22
     a26:	ea 01       	movw	r28, r20
     a28:	0e 94 01 05 	call	0xa02	; 0xa02 <nrf_getStatus>
     a2c:	98 2f       	mov	r25, r24
     a2e:	90 74       	andi	r25, 0x40	; 64
     a30:	f7 01       	movw	r30, r14
     a32:	90 83       	st	Z, r25
     a34:	98 2f       	mov	r25, r24
     a36:	90 72       	andi	r25, 0x20	; 32
     a38:	f8 01       	movw	r30, r16
     a3a:	90 83       	st	Z, r25
     a3c:	98 2f       	mov	r25, r24
     a3e:	90 71       	andi	r25, 0x10	; 16
     a40:	98 83       	st	Y, r25
     a42:	80 77       	andi	r24, 0x70	; 112
     a44:	df 91       	pop	r29
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	ff 90       	pop	r15
     a4e:	ef 90       	pop	r14
     a50:	08 95       	ret

00000a52 <nrf_flushRX>:
     a52:	28 98       	cbi	0x05, 0	; 5
     a54:	82 ee       	ldi	r24, 0xE2	; 226
     a56:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     a5a:	28 9a       	sbi	0x05, 0	; 5
     a5c:	82 e0       	ldi	r24, 0x02	; 2
     a5e:	8a 95       	dec	r24
     a60:	f1 f7       	brne	.-4      	; 0xa5e <nrf_flushRX+0xc>
     a62:	00 c0       	rjmp	.+0      	; 0xa64 <nrf_flushRX+0x12>
     a64:	08 95       	ret

00000a66 <nrf_flushTX>:
     a66:	28 98       	cbi	0x05, 0	; 5
     a68:	81 ee       	ldi	r24, 0xE1	; 225
     a6a:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     a6e:	28 9a       	sbi	0x05, 0	; 5
     a70:	82 e0       	ldi	r24, 0x02	; 2
     a72:	8a 95       	dec	r24
     a74:	f1 f7       	brne	.-4      	; 0xa72 <nrf_flushTX+0xc>
     a76:	00 c0       	rjmp	.+0      	; 0xa78 <nrf_flushTX+0x12>
     a78:	08 95       	ret

00000a7a <nrf_flushAll>:
     a7a:	0e 94 29 05 	call	0xa52	; 0xa52 <nrf_flushRX>
     a7e:	0c 94 33 05 	jmp	0xa66	; 0xa66 <nrf_flushTX>

00000a82 <nrf_startListening>:
     a82:	2d 9a       	sbi	0x05, 5	; 5
     a84:	8d e0       	ldi	r24, 0x0D	; 13
     a86:	8a 95       	dec	r24
     a88:	f1 f7       	brne	.-4      	; 0xa86 <nrf_startListening+0x4>
     a8a:	00 00       	nop
     a8c:	08 95       	ret

00000a8e <nrf_stopListening>:
     a8e:	2d 98       	cbi	0x05, 5	; 5
     a90:	08 95       	ret

00000a92 <nrf_getRXPipeNumber>:
     a92:	0e 94 01 05 	call	0xa02	; 0xa02 <nrf_getStatus>
     a96:	86 95       	lsr	r24
     a98:	87 70       	andi	r24, 0x07	; 7
     a9a:	08 95       	ret

00000a9c <nrf_setTXAddress>:
     a9c:	0f 93       	push	r16
     a9e:	1f 93       	push	r17
     aa0:	cf 93       	push	r28
     aa2:	8c 01       	movw	r16, r24
     aa4:	c6 2f       	mov	r28, r22
     aa6:	28 98       	cbi	0x05, 0	; 5
     aa8:	80 e3       	ldi	r24, 0x30	; 48
     aaa:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     aae:	cc 23       	and	r28, r28
     ab0:	49 f0       	breq	.+18     	; 0xac4 <nrf_setTXAddress+0x28>
     ab2:	f8 01       	movw	r30, r16
     ab4:	ec 0f       	add	r30, r28
     ab6:	f1 1d       	adc	r31, r1
     ab8:	31 97       	sbiw	r30, 0x01	; 1
     aba:	80 81       	ld	r24, Z
     abc:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     ac0:	c1 50       	subi	r28, 0x01	; 1
     ac2:	f5 cf       	rjmp	.-22     	; 0xaae <nrf_setTXAddress+0x12>
     ac4:	28 9a       	sbi	0x05, 0	; 5
     ac6:	82 e0       	ldi	r24, 0x02	; 2
     ac8:	8a 95       	dec	r24
     aca:	f1 f7       	brne	.-4      	; 0xac8 <nrf_setTXAddress+0x2c>
     acc:	00 c0       	rjmp	.+0      	; 0xace <nrf_setTXAddress+0x32>
     ace:	cf 91       	pop	r28
     ad0:	1f 91       	pop	r17
     ad2:	0f 91       	pop	r16
     ad4:	08 95       	ret

00000ad6 <SPI_Read_Byte>:
     ad6:	28 98       	cbi	0x05, 0	; 5
     ad8:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     adc:	8f ef       	ldi	r24, 0xFF	; 255
     ade:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     ae2:	28 9a       	sbi	0x05, 0	; 5
     ae4:	92 e0       	ldi	r25, 0x02	; 2
     ae6:	9a 95       	dec	r25
     ae8:	f1 f7       	brne	.-4      	; 0xae6 <SPI_Read_Byte+0x10>
     aea:	00 c0       	rjmp	.+0      	; 0xaec <SPI_Read_Byte+0x16>
     aec:	08 95       	ret

00000aee <nrf_isPoweredUp>:
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     af4:	82 70       	andi	r24, 0x02	; 2
     af6:	08 95       	ret

00000af8 <nrf_RXFifoEmpty>:
     af8:	87 e1       	ldi	r24, 0x17	; 23
     afa:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     afe:	81 70       	andi	r24, 0x01	; 1
     b00:	08 95       	ret

00000b02 <nrf_dataAvailable>:
     b02:	87 e1       	ldi	r24, 0x17	; 23
     b04:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     b08:	80 95       	com	r24
     b0a:	81 70       	andi	r24, 0x01	; 1
     b0c:	08 95       	ret

00000b0e <nrf_getPayloadLength>:
     b0e:	86 30       	cpi	r24, 0x06	; 6
     b10:	18 f4       	brcc	.+6      	; 0xb18 <nrf_getPayloadLength+0xa>
     b12:	8f 5e       	subi	r24, 0xEF	; 239
     b14:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <SPI_Read_Byte>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	08 95       	ret

00000b1c <nrf_getDynamicPayloadLength>:
     b1c:	80 e6       	ldi	r24, 0x60	; 96
     b1e:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <SPI_Read_Byte>

00000b22 <nrf_hasDynamicPayloadLength>:
     b22:	cf 93       	push	r28
     b24:	86 30       	cpi	r24, 0x06	; 6
     b26:	60 f4       	brcc	.+24     	; 0xb40 <nrf_hasDynamicPayloadLength+0x1e>
     b28:	c8 2f       	mov	r28, r24
     b2a:	8c e1       	ldi	r24, 0x1C	; 28
     b2c:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     b30:	21 e0       	ldi	r18, 0x01	; 1
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	01 c0       	rjmp	.+2      	; 0xb38 <nrf_hasDynamicPayloadLength+0x16>
     b36:	22 0f       	add	r18, r18
     b38:	ca 95       	dec	r28
     b3a:	ea f7       	brpl	.-6      	; 0xb36 <nrf_hasDynamicPayloadLength+0x14>
     b3c:	82 23       	and	r24, r18
     b3e:	01 c0       	rjmp	.+2      	; 0xb42 <nrf_hasDynamicPayloadLength+0x20>
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	cf 91       	pop	r28
     b44:	08 95       	ret

00000b46 <nrf_readRXData>:
     b46:	ef 92       	push	r14
     b48:	ff 92       	push	r15
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	f8 2e       	mov	r15, r24
     b54:	e9 2e       	mov	r14, r25
     b56:	eb 01       	movw	r28, r22
     b58:	8a 01       	movw	r16, r20
     b5a:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <nrf_RXFifoEmpty>
     b5e:	88 23       	and	r24, r24
     b60:	21 f0       	breq	.+8      	; 0xb6a <nrf_readRXData+0x24>
     b62:	18 82       	st	Y, r1
     b64:	f8 01       	movw	r30, r16
     b66:	10 82       	st	Z, r1
     b68:	26 c0       	rjmp	.+76     	; 0xbb6 <nrf_readRXData+0x70>
     b6a:	0e 94 49 05 	call	0xa92	; 0xa92 <nrf_getRXPipeNumber>
     b6e:	f8 01       	movw	r30, r16
     b70:	80 83       	st	Z, r24
     b72:	0e 94 91 05 	call	0xb22	; 0xb22 <nrf_hasDynamicPayloadLength>
     b76:	88 23       	and	r24, r24
     b78:	19 f0       	breq	.+6      	; 0xb80 <nrf_readRXData+0x3a>
     b7a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <nrf_getDynamicPayloadLength>
     b7e:	04 c0       	rjmp	.+8      	; 0xb88 <nrf_readRXData+0x42>
     b80:	f8 01       	movw	r30, r16
     b82:	80 81       	ld	r24, Z
     b84:	0e 94 87 05 	call	0xb0e	; 0xb0e <nrf_getPayloadLength>
     b88:	88 83       	st	Y, r24
     b8a:	28 98       	cbi	0x05, 0	; 5
     b8c:	18 81       	ld	r17, Y
     b8e:	81 e6       	ldi	r24, 0x61	; 97
     b90:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     b94:	0f 2d       	mov	r16, r15
     b96:	cf 2d       	mov	r28, r15
     b98:	de 2d       	mov	r29, r14
     b9a:	8c 2f       	mov	r24, r28
     b9c:	80 1b       	sub	r24, r16
     b9e:	81 17       	cp	r24, r17
     ba0:	28 f4       	brcc	.+10     	; 0xbac <nrf_readRXData+0x66>
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     ba8:	89 93       	st	Y+, r24
     baa:	f7 cf       	rjmp	.-18     	; 0xb9a <nrf_readRXData+0x54>
     bac:	28 9a       	sbi	0x05, 0	; 5
     bae:	f2 e0       	ldi	r31, 0x02	; 2
     bb0:	fa 95       	dec	r31
     bb2:	f1 f7       	brne	.-4      	; 0xbb0 <nrf_readRXData+0x6a>
     bb4:	00 c0       	rjmp	.+0      	; 0xbb6 <nrf_readRXData+0x70>
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	1f 91       	pop	r17
     bbc:	0f 91       	pop	r16
     bbe:	ff 90       	pop	r15
     bc0:	ef 90       	pop	r14
     bc2:	08 95       	ret

00000bc4 <SPI_Write_Byte>:
     bc4:	cf 93       	push	r28
     bc6:	c6 2f       	mov	r28, r22
     bc8:	28 98       	cbi	0x05, 0	; 5
     bca:	80 5e       	subi	r24, 0xE0	; 224
     bcc:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     bd0:	8c 2f       	mov	r24, r28
     bd2:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     bd6:	28 9a       	sbi	0x05, 0	; 5
     bd8:	82 e0       	ldi	r24, 0x02	; 2
     bda:	8a 95       	dec	r24
     bdc:	f1 f7       	brne	.-4      	; 0xbda <SPI_Write_Byte+0x16>
     bde:	00 c0       	rjmp	.+0      	; 0xbe0 <SPI_Write_Byte+0x1c>
     be0:	cf 91       	pop	r28
     be2:	08 95       	ret

00000be4 <nrf_powerUp>:
     be4:	0e 94 77 05 	call	0xaee	; 0xaee <nrf_isPoweredUp>
     be8:	81 11       	cpse	r24, r1
     bea:	0e c0       	rjmp	.+28     	; 0xc08 <nrf_powerUp+0x24>
     bec:	2d 98       	cbi	0x05, 5	; 5
     bee:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     bf2:	68 2f       	mov	r22, r24
     bf4:	62 60       	ori	r22, 0x02	; 2
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <SPI_Write_Byte>
     bfc:	8f e9       	ldi	r24, 0x9F	; 159
     bfe:	9f e0       	ldi	r25, 0x0F	; 15
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	f1 f7       	brne	.-4      	; 0xc00 <nrf_powerUp+0x1c>
     c04:	00 c0       	rjmp	.+0      	; 0xc06 <nrf_powerUp+0x22>
     c06:	00 00       	nop
     c08:	08 95       	ret

00000c0a <nrf_maskIRQ>:
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	18 2f       	mov	r17, r24
     c12:	d6 2f       	mov	r29, r22
     c14:	c4 2f       	mov	r28, r20
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     c1c:	8f 78       	andi	r24, 0x8F	; 143
     c1e:	11 11       	cpse	r17, r1
     c20:	02 c0       	rjmp	.+4      	; 0xc26 <nrf_maskIRQ+0x1c>
     c22:	60 e0       	ldi	r22, 0x00	; 0
     c24:	01 c0       	rjmp	.+2      	; 0xc28 <nrf_maskIRQ+0x1e>
     c26:	60 e4       	ldi	r22, 0x40	; 64
     c28:	d1 11       	cpse	r29, r1
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <nrf_maskIRQ+0x26>
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <nrf_maskIRQ+0x28>
     c30:	20 e2       	ldi	r18, 0x20	; 32
     c32:	c1 11       	cpse	r28, r1
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <nrf_maskIRQ+0x30>
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	01 c0       	rjmp	.+2      	; 0xc3c <nrf_maskIRQ+0x32>
     c3a:	90 e1       	ldi	r25, 0x10	; 16
     c3c:	68 2b       	or	r22, r24
     c3e:	62 2b       	or	r22, r18
     c40:	69 2b       	or	r22, r25
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	df 91       	pop	r29
     c46:	cf 91       	pop	r28
     c48:	1f 91       	pop	r17
     c4a:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000c4e <nrf_resetIRQFlags>:
     c4e:	60 e7       	ldi	r22, 0x70	; 112
     c50:	87 e0       	ldi	r24, 0x07	; 7
     c52:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000c56 <nrf_setModeRX>:
     c56:	2d 98       	cbi	0x05, 5	; 5
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     c5e:	68 2f       	mov	r22, r24
     c60:	61 60       	ori	r22, 0x01	; 1
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <SPI_Write_Byte>
     c68:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <nrf_resetIRQFlags>

00000c6c <nrf_setChannel>:
     c6c:	8e 37       	cpi	r24, 0x7E	; 126
     c6e:	08 f0       	brcs	.+2      	; 0xc72 <nrf_setChannel+0x6>
     c70:	8d e7       	ldi	r24, 0x7D	; 125
     c72:	68 2f       	mov	r22, r24
     c74:	85 e0       	ldi	r24, 0x05	; 5
     c76:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000c7a <nrf_setAddressWidth>:
     c7a:	83 30       	cpi	r24, 0x03	; 3
     c7c:	28 f0       	brcs	.+10     	; 0xc88 <nrf_setAddressWidth+0xe>
     c7e:	68 2f       	mov	r22, r24
     c80:	86 30       	cpi	r24, 0x06	; 6
     c82:	18 f0       	brcs	.+6      	; 0xc8a <nrf_setAddressWidth+0x10>
     c84:	65 e0       	ldi	r22, 0x05	; 5
     c86:	01 c0       	rjmp	.+2      	; 0xc8a <nrf_setAddressWidth+0x10>
     c88:	63 e0       	ldi	r22, 0x03	; 3
     c8a:	62 50       	subi	r22, 0x02	; 2
     c8c:	83 e0       	ldi	r24, 0x03	; 3
     c8e:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000c92 <nrf_setCRCLength>:
     c92:	cf 93       	push	r28
     c94:	c8 2f       	mov	r28, r24
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     c9c:	68 2f       	mov	r22, r24
     c9e:	63 7f       	andi	r22, 0xF3	; 243
     ca0:	cc 23       	and	r28, r28
     ca2:	29 f0       	breq	.+10     	; 0xcae <nrf_setCRCLength+0x1c>
     ca4:	c1 30       	cpi	r28, 0x01	; 1
     ca6:	11 f4       	brne	.+4      	; 0xcac <nrf_setCRCLength+0x1a>
     ca8:	68 60       	ori	r22, 0x08	; 8
     caa:	01 c0       	rjmp	.+2      	; 0xcae <nrf_setCRCLength+0x1c>
     cac:	6c 60       	ori	r22, 0x0C	; 12
     cae:	80 e0       	ldi	r24, 0x00	; 0
     cb0:	cf 91       	pop	r28
     cb2:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000cb6 <nrf_setRXAddress>:
     cb6:	1f 93       	push	r17
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	eb 01       	movw	r28, r22
     cbe:	14 2f       	mov	r17, r20
     cc0:	82 30       	cpi	r24, 0x02	; 2
     cc2:	a8 f4       	brcc	.+42     	; 0xcee <nrf_setRXAddress+0x38>
     cc4:	28 98       	cbi	0x05, 0	; 5
     cc6:	86 5d       	subi	r24, 0xD6	; 214
     cc8:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     ccc:	11 23       	and	r17, r17
     cce:	49 f0       	breq	.+18     	; 0xce2 <nrf_setRXAddress+0x2c>
     cd0:	fe 01       	movw	r30, r28
     cd2:	e1 0f       	add	r30, r17
     cd4:	f1 1d       	adc	r31, r1
     cd6:	31 97       	sbiw	r30, 0x01	; 1
     cd8:	80 81       	ld	r24, Z
     cda:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     cde:	11 50       	subi	r17, 0x01	; 1
     ce0:	f5 cf       	rjmp	.-22     	; 0xccc <nrf_setRXAddress+0x16>
     ce2:	28 9a       	sbi	0x05, 0	; 5
     ce4:	82 e0       	ldi	r24, 0x02	; 2
     ce6:	8a 95       	dec	r24
     ce8:	f1 f7       	brne	.-4      	; 0xce6 <nrf_setRXAddress+0x30>
     cea:	00 c0       	rjmp	.+0      	; 0xcec <nrf_setRXAddress+0x36>
     cec:	0c c0       	rjmp	.+24     	; 0xd06 <nrf_setRXAddress+0x50>
     cee:	86 30       	cpi	r24, 0x06	; 6
     cf0:	50 f4       	brcc	.+20     	; 0xd06 <nrf_setRXAddress+0x50>
     cf2:	c4 0f       	add	r28, r20
     cf4:	d1 1d       	adc	r29, r1
     cf6:	21 97       	sbiw	r28, 0x01	; 1
     cf8:	68 81       	ld	r22, Y
     cfa:	86 5f       	subi	r24, 0xF6	; 246
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	1f 91       	pop	r17
     d02:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>
     d06:	df 91       	pop	r29
     d08:	cf 91       	pop	r28
     d0a:	1f 91       	pop	r17
     d0c:	08 95       	ret

00000d0e <nrf_setRetries>:
     d0e:	26 2f       	mov	r18, r22
     d10:	8a 3f       	cpi	r24, 0xFA	; 250
     d12:	91 05       	cpc	r25, r1
     d14:	38 f0       	brcs	.+14     	; 0xd24 <nrf_setRetries+0x16>
     d16:	81 3a       	cpi	r24, 0xA1	; 161
     d18:	3f e0       	ldi	r19, 0x0F	; 15
     d1a:	93 07       	cpc	r25, r19
     d1c:	28 f0       	brcs	.+10     	; 0xd28 <nrf_setRetries+0x1a>
     d1e:	80 ea       	ldi	r24, 0xA0	; 160
     d20:	9f e0       	ldi	r25, 0x0F	; 15
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <nrf_setRetries+0x1a>
     d24:	8a ef       	ldi	r24, 0xFA	; 250
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	6a ef       	ldi	r22, 0xFA	; 250
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
     d30:	61 50       	subi	r22, 0x01	; 1
     d32:	30 e1       	ldi	r19, 0x10	; 16
     d34:	63 9f       	mul	r22, r19
     d36:	c0 01       	movw	r24, r0
     d38:	11 24       	eor	r1, r1
     d3a:	62 2f       	mov	r22, r18
     d3c:	20 31       	cpi	r18, 0x10	; 16
     d3e:	08 f0       	brcs	.+2      	; 0xd42 <nrf_setRetries+0x34>
     d40:	6f e0       	ldi	r22, 0x0F	; 15
     d42:	68 2b       	or	r22, r24
     d44:	84 e0       	ldi	r24, 0x04	; 4
     d46:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000d4a <nrf_setPayloadLength>:
     d4a:	86 30       	cpi	r24, 0x06	; 6
     d4c:	30 f4       	brcc	.+12     	; 0xd5a <nrf_setPayloadLength+0x10>
     d4e:	61 32       	cpi	r22, 0x21	; 33
     d50:	08 f0       	brcs	.+2      	; 0xd54 <nrf_setPayloadLength+0xa>
     d52:	60 e2       	ldi	r22, 0x20	; 32
     d54:	8f 5e       	subi	r24, 0xEF	; 239
     d56:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>
     d5a:	08 95       	ret

00000d5c <nrf_setDataRate>:
     d5c:	cf 93       	push	r28
     d5e:	c8 2f       	mov	r28, r24
     d60:	86 e0       	ldi	r24, 0x06	; 6
     d62:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     d66:	68 2f       	mov	r22, r24
     d68:	67 7d       	andi	r22, 0xD7	; 215
     d6a:	c1 11       	cpse	r28, r1
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <nrf_setDataRate+0x16>
     d6e:	60 62       	ori	r22, 0x20	; 32
     d70:	03 c0       	rjmp	.+6      	; 0xd78 <nrf_setDataRate+0x1c>
     d72:	c1 30       	cpi	r28, 0x01	; 1
     d74:	09 f0       	breq	.+2      	; 0xd78 <nrf_setDataRate+0x1c>
     d76:	68 60       	ori	r22, 0x08	; 8
     d78:	86 e0       	ldi	r24, 0x06	; 6
     d7a:	cf 91       	pop	r28
     d7c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000d80 <nrf_setRFOutPower>:
     d80:	cf 93       	push	r28
     d82:	c8 2f       	mov	r28, r24
     d84:	86 e0       	ldi	r24, 0x06	; 6
     d86:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     d8a:	6c 2f       	mov	r22, r28
     d8c:	c4 30       	cpi	r28, 0x04	; 4
     d8e:	08 f0       	brcs	.+2      	; 0xd92 <nrf_setRFOutPower+0x12>
     d90:	63 e0       	ldi	r22, 0x03	; 3
     d92:	66 0f       	add	r22, r22
     d94:	89 7f       	andi	r24, 0xF9	; 249
     d96:	68 2b       	or	r22, r24
     d98:	86 e0       	ldi	r24, 0x06	; 6
     d9a:	cf 91       	pop	r28
     d9c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000da0 <nrf_init>:
     da0:	0f 93       	push	r16
     da2:	1f 93       	push	r17
     da4:	cf 93       	push	r28
     da6:	df 93       	push	r29
     da8:	08 2f       	mov	r16, r24
     daa:	16 2f       	mov	r17, r22
     dac:	d4 2f       	mov	r29, r20
     dae:	c2 2f       	mov	r28, r18
     db0:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <nrf_powerUp>
     db4:	80 2f       	mov	r24, r16
     db6:	0e 94 36 06 	call	0xc6c	; 0xc6c <nrf_setChannel>
     dba:	81 2f       	mov	r24, r17
     dbc:	0e 94 ae 06 	call	0xd5c	; 0xd5c <nrf_setDataRate>
     dc0:	83 e0       	ldi	r24, 0x03	; 3
     dc2:	0e 94 c0 06 	call	0xd80	; 0xd80 <nrf_setRFOutPower>
     dc6:	8d 2f       	mov	r24, r29
     dc8:	0e 94 3d 06 	call	0xc7a	; 0xc7a <nrf_setAddressWidth>
     dcc:	8c 2f       	mov	r24, r28
     dce:	0e 94 49 06 	call	0xc92	; 0xc92 <nrf_setCRCLength>
     dd2:	6f e0       	ldi	r22, 0x0F	; 15
     dd4:	84 ef       	ldi	r24, 0xF4	; 244
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0f 91       	pop	r16
     de0:	0c 94 87 06 	jmp	0xd0e	; 0xd0e <nrf_setRetries>

00000de4 <nrf_enableAutoAck>:
     de4:	cf 93       	push	r28
     de6:	86 30       	cpi	r24, 0x06	; 6
     de8:	78 f4       	brcc	.+30     	; 0xe08 <nrf_enableAutoAck+0x24>
     dea:	c8 2f       	mov	r28, r24
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     df2:	61 e0       	ldi	r22, 0x01	; 1
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	01 c0       	rjmp	.+2      	; 0xdfa <nrf_enableAutoAck+0x16>
     df8:	66 0f       	add	r22, r22
     dfa:	ca 95       	dec	r28
     dfc:	ea f7       	brpl	.-6      	; 0xdf8 <nrf_enableAutoAck+0x14>
     dfe:	68 2b       	or	r22, r24
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	cf 91       	pop	r28
     e04:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>
     e08:	cf 91       	pop	r28
     e0a:	08 95       	ret

00000e0c <nrf_enableRXAddress>:
     e0c:	cf 93       	push	r28
     e0e:	86 30       	cpi	r24, 0x06	; 6
     e10:	78 f4       	brcc	.+30     	; 0xe30 <nrf_enableRXAddress+0x24>
     e12:	c8 2f       	mov	r28, r24
     e14:	82 e0       	ldi	r24, 0x02	; 2
     e16:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	70 e0       	ldi	r23, 0x00	; 0
     e1e:	01 c0       	rjmp	.+2      	; 0xe22 <nrf_enableRXAddress+0x16>
     e20:	66 0f       	add	r22, r22
     e22:	ca 95       	dec	r28
     e24:	ea f7       	brpl	.-6      	; 0xe20 <nrf_enableRXAddress+0x14>
     e26:	68 2b       	or	r22, r24
     e28:	82 e0       	ldi	r24, 0x02	; 2
     e2a:	cf 91       	pop	r28
     e2c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>
     e30:	cf 91       	pop	r28
     e32:	08 95       	ret

00000e34 <nrf_enableDynamicPayloadLengths>:
     e34:	8d e1       	ldi	r24, 0x1D	; 29
     e36:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     e3a:	68 2f       	mov	r22, r24
     e3c:	64 60       	ori	r22, 0x04	; 4
     e3e:	8d e1       	ldi	r24, 0x1D	; 29
     e40:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000e44 <nrf_enableDynamicPayloadLength>:
     e44:	cf 93       	push	r28
     e46:	86 30       	cpi	r24, 0x06	; 6
     e48:	a0 f4       	brcc	.+40     	; 0xe72 <nrf_enableDynamicPayloadLength+0x2e>
     e4a:	c8 2f       	mov	r28, r24
     e4c:	0e 94 1a 07 	call	0xe34	; 0xe34 <nrf_enableDynamicPayloadLengths>
     e50:	8c 2f       	mov	r24, r28
     e52:	0e 94 f2 06 	call	0xde4	; 0xde4 <nrf_enableAutoAck>
     e56:	8c e1       	ldi	r24, 0x1C	; 28
     e58:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     e5c:	61 e0       	ldi	r22, 0x01	; 1
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	01 c0       	rjmp	.+2      	; 0xe64 <nrf_enableDynamicPayloadLength+0x20>
     e62:	66 0f       	add	r22, r22
     e64:	ca 95       	dec	r28
     e66:	ea f7       	brpl	.-6      	; 0xe62 <nrf_enableDynamicPayloadLength+0x1e>
     e68:	68 2b       	or	r22, r24
     e6a:	8c e1       	ldi	r24, 0x1C	; 28
     e6c:	cf 91       	pop	r28
     e6e:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>
     e72:	cf 91       	pop	r28
     e74:	08 95       	ret

00000e76 <nrf_enableAckPayload>:
     e76:	0e 94 1a 07 	call	0xe34	; 0xe34 <nrf_enableDynamicPayloadLengths>
     e7a:	8d e1       	ldi	r24, 0x1D	; 29
     e7c:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     e80:	68 2f       	mov	r22, r24
     e82:	62 60       	ori	r22, 0x02	; 2
     e84:	8d e1       	ldi	r24, 0x1D	; 29
     e86:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000e8a <nrf_disableAckPayload>:
     e8a:	8d e1       	ldi	r24, 0x1D	; 29
     e8c:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     e90:	68 2f       	mov	r22, r24
     e92:	6d 7f       	andi	r22, 0xFD	; 253
     e94:	8d e1       	ldi	r24, 0x1D	; 29
     e96:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000e9a <nrf_enableDynamicAck>:
     e9a:	8d e1       	ldi	r24, 0x1D	; 29
     e9c:	0e 94 6b 05 	call	0xad6	; 0xad6 <SPI_Read_Byte>
     ea0:	68 2f       	mov	r22, r24
     ea2:	61 60       	ori	r22, 0x01	; 1
     ea4:	8d e1       	ldi	r24, 0x1D	; 29
     ea6:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <SPI_Write_Byte>

00000eaa <nrf_openDynamicRXPipe>:
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	c8 2f       	mov	r28, r24
     eb2:	14 2f       	mov	r17, r20
     eb4:	d2 2f       	mov	r29, r18
     eb6:	45 e0       	ldi	r20, 0x05	; 5
     eb8:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <nrf_setRXAddress>
     ebc:	8c 2f       	mov	r24, r28
     ebe:	0e 94 06 07 	call	0xe0c	; 0xe0c <nrf_enableRXAddress>
     ec2:	60 e2       	ldi	r22, 0x20	; 32
     ec4:	8c 2f       	mov	r24, r28
     ec6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <nrf_setPayloadLength>
     eca:	8c 2f       	mov	r24, r28
     ecc:	0e 94 22 07 	call	0xe44	; 0xe44 <nrf_enableDynamicPayloadLength>
     ed0:	11 23       	and	r17, r17
     ed2:	19 f0       	breq	.+6      	; 0xeda <nrf_openDynamicRXPipe+0x30>
     ed4:	0e 94 3b 07 	call	0xe76	; 0xe76 <nrf_enableAckPayload>
     ed8:	02 c0       	rjmp	.+4      	; 0xede <nrf_openDynamicRXPipe+0x34>
     eda:	0e 94 45 07 	call	0xe8a	; 0xe8a <nrf_disableAckPayload>
     ede:	dd 23       	and	r29, r29
     ee0:	29 f0       	breq	.+10     	; 0xeec <nrf_openDynamicRXPipe+0x42>
     ee2:	df 91       	pop	r29
     ee4:	cf 91       	pop	r28
     ee6:	1f 91       	pop	r17
     ee8:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <nrf_enableDynamicAck>
     eec:	df 91       	pop	r29
     eee:	cf 91       	pop	r28
     ef0:	1f 91       	pop	r17
     ef2:	08 95       	ret

00000ef4 <nrf_openDynamicTXPipe>:
     ef4:	0f 93       	push	r16
     ef6:	1f 93       	push	r17
     ef8:	cf 93       	push	r28
     efa:	df 93       	push	r29
     efc:	ec 01       	movw	r28, r24
     efe:	16 2f       	mov	r17, r22
     f00:	04 2f       	mov	r16, r20
     f02:	65 e0       	ldi	r22, 0x05	; 5
     f04:	0e 94 4e 05 	call	0xa9c	; 0xa9c <nrf_setTXAddress>
     f08:	20 2f       	mov	r18, r16
     f0a:	41 2f       	mov	r20, r17
     f0c:	be 01       	movw	r22, r28
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	1f 91       	pop	r17
     f16:	0f 91       	pop	r16
     f18:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <nrf_openDynamicRXPipe>

00000f1c <writePayload>:
     f1c:	0f 93       	push	r16
     f1e:	1f 93       	push	r17
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	ec 01       	movw	r28, r24
     f26:	8c 01       	movw	r16, r24
     f28:	06 0f       	add	r16, r22
     f2a:	11 1d       	adc	r17, r1
     f2c:	c0 17       	cp	r28, r16
     f2e:	d1 07       	cpc	r29, r17
     f30:	21 f0       	breq	.+8      	; 0xf3a <writePayload+0x1e>
     f32:	89 91       	ld	r24, Y+
     f34:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     f38:	f9 cf       	rjmp	.-14     	; 0xf2c <writePayload+0x10>
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	08 95       	ret

00000f44 <SPI_Write_Bytes>:
     f44:	1f 93       	push	r17
     f46:	cf 93       	push	r28
     f48:	df 93       	push	r29
     f4a:	eb 01       	movw	r28, r22
     f4c:	14 2f       	mov	r17, r20
     f4e:	28 98       	cbi	0x05, 0	; 5
     f50:	0e 94 d7 07 	call	0xfae	; 0xfae <SPI_Write>
     f54:	61 2f       	mov	r22, r17
     f56:	ce 01       	movw	r24, r28
     f58:	0e 94 8e 07 	call	0xf1c	; 0xf1c <writePayload>
     f5c:	28 9a       	sbi	0x05, 0	; 5
     f5e:	82 e0       	ldi	r24, 0x02	; 2
     f60:	8a 95       	dec	r24
     f62:	f1 f7       	brne	.-4      	; 0xf60 <SPI_Write_Bytes+0x1c>
     f64:	00 c0       	rjmp	.+0      	; 0xf66 <SPI_Write_Bytes+0x22>
     f66:	df 91       	pop	r29
     f68:	cf 91       	pop	r28
     f6a:	1f 91       	pop	r17
     f6c:	08 95       	ret

00000f6e <nrf_writeAckData>:
     f6e:	86 30       	cpi	r24, 0x06	; 6
     f70:	18 f4       	brcc	.+6      	; 0xf78 <nrf_writeAckData+0xa>
     f72:	88 55       	subi	r24, 0x58	; 88
     f74:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <SPI_Write_Bytes>
     f78:	08 95       	ret

00000f7a <SPI_Init>:
     f7a:	25 9a       	sbi	0x04, 5	; 4
     f7c:	20 9a       	sbi	0x04, 0	; 4
     f7e:	22 9a       	sbi	0x04, 2	; 4
     f80:	21 9a       	sbi	0x04, 1	; 4
     f82:	23 98       	cbi	0x04, 3	; 4
     f84:	8c b5       	in	r24, 0x2c	; 44
     f86:	80 65       	ori	r24, 0x50	; 80
     f88:	8c bd       	out	0x2c, r24	; 44
     f8a:	8c b5       	in	r24, 0x2c	; 44
     f8c:	81 60       	ori	r24, 0x01	; 1
     f8e:	8c bd       	out	0x2c, r24	; 44
     f90:	8c b5       	in	r24, 0x2c	; 44
     f92:	8d 7f       	andi	r24, 0xFD	; 253
     f94:	8c bd       	out	0x2c, r24	; 44
     f96:	8d b5       	in	r24, 0x2d	; 45
     f98:	81 60       	ori	r24, 0x01	; 1
     f9a:	8d bd       	out	0x2d, r24	; 45
     f9c:	28 9a       	sbi	0x05, 0	; 5
     f9e:	2d 98       	cbi	0x05, 5	; 5
     fa0:	8f e1       	ldi	r24, 0x1F	; 31
     fa2:	9e e4       	ldi	r25, 0x4E	; 78
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <SPI_Init+0x2a>
     fa8:	00 c0       	rjmp	.+0      	; 0xfaa <SPI_Init+0x30>
     faa:	00 00       	nop
     fac:	08 95       	ret

00000fae <SPI_Write>:
     fae:	8e bd       	out	0x2e, r24	; 46
     fb0:	0d b4       	in	r0, 0x2d	; 45
     fb2:	07 fe       	sbrs	r0, 7
     fb4:	fd cf       	rjmp	.-6      	; 0xfb0 <SPI_Write+0x2>
     fb6:	8e b5       	in	r24, 0x2e	; 46
     fb8:	08 95       	ret

00000fba <i2c_init>:
     fba:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     fbe:	8c e0       	ldi	r24, 0x0C	; 12
     fc0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     fc4:	08 95       	ret

00000fc6 <i2c_start>:
     fc6:	94 ea       	ldi	r25, 0xA4	; 164
     fc8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     fcc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     fd0:	97 ff       	sbrs	r25, 7
     fd2:	fc cf       	rjmp	.-8      	; 0xfcc <i2c_start+0x6>
     fd4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     fd8:	98 7f       	andi	r25, 0xF8	; 248
     fda:	98 30       	cpi	r25, 0x08	; 8
     fdc:	21 f0       	breq	.+8      	; 0xfe6 <i2c_start+0x20>
     fde:	90 31       	cpi	r25, 0x10	; 16
     fe0:	11 f0       	breq	.+4      	; 0xfe6 <i2c_start+0x20>
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	08 95       	ret
     fe6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     fea:	84 e8       	ldi	r24, 0x84	; 132
     fec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     ff0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     ff4:	87 ff       	sbrs	r24, 7
     ff6:	fc cf       	rjmp	.-8      	; 0xff0 <i2c_start+0x2a>
     ff8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     ffc:	88 7f       	andi	r24, 0xF8	; 248
     ffe:	88 31       	cpi	r24, 0x18	; 24
    1000:	11 f0       	breq	.+4      	; 0x1006 <i2c_start+0x40>
    1002:	80 34       	cpi	r24, 0x40	; 64
    1004:	71 f7       	brne	.-36     	; 0xfe2 <i2c_start+0x1c>
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	08 95       	ret

0000100a <i2c_start_wait>:
    100a:	24 ea       	ldi	r18, 0xA4	; 164
    100c:	34 e8       	ldi	r19, 0x84	; 132
    100e:	44 e9       	ldi	r20, 0x94	; 148
    1010:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1014:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1018:	97 ff       	sbrs	r25, 7
    101a:	fc cf       	rjmp	.-8      	; 0x1014 <i2c_start_wait+0xa>
    101c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1020:	98 7f       	andi	r25, 0xF8	; 248
    1022:	98 30       	cpi	r25, 0x08	; 8
    1024:	11 f0       	breq	.+4      	; 0x102a <i2c_start_wait+0x20>
    1026:	90 31       	cpi	r25, 0x10	; 16
    1028:	99 f7       	brne	.-26     	; 0x1010 <i2c_start_wait+0x6>
    102a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    102e:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1032:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1036:	97 ff       	sbrs	r25, 7
    1038:	fc cf       	rjmp	.-8      	; 0x1032 <i2c_start_wait+0x28>
    103a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    103e:	98 7f       	andi	r25, 0xF8	; 248
    1040:	90 32       	cpi	r25, 0x20	; 32
    1042:	11 f0       	breq	.+4      	; 0x1048 <i2c_start_wait+0x3e>
    1044:	98 35       	cpi	r25, 0x58	; 88
    1046:	39 f4       	brne	.+14     	; 0x1056 <i2c_start_wait+0x4c>
    1048:	40 93 bc 00 	sts	0x00BC, r20	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    104c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1050:	94 fd       	sbrc	r25, 4
    1052:	fc cf       	rjmp	.-8      	; 0x104c <i2c_start_wait+0x42>
    1054:	dd cf       	rjmp	.-70     	; 0x1010 <i2c_start_wait+0x6>
    1056:	08 95       	ret

00001058 <i2c_start_wait_for>:
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	34 ea       	ldi	r19, 0xA4	; 164
    105c:	44 e8       	ldi	r20, 0x84	; 132
    105e:	54 e9       	ldi	r21, 0x94	; 148
    1060:	9f 5f       	subi	r25, 0xFF	; 255
    1062:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1066:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    106a:	27 ff       	sbrs	r18, 7
    106c:	fc cf       	rjmp	.-8      	; 0x1066 <i2c_start_wait_for+0xe>
    106e:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1072:	28 7f       	andi	r18, 0xF8	; 248
    1074:	28 30       	cpi	r18, 0x08	; 8
    1076:	29 f0       	breq	.+10     	; 0x1082 <i2c_start_wait_for+0x2a>
    1078:	20 31       	cpi	r18, 0x10	; 16
    107a:	19 f0       	breq	.+6      	; 0x1082 <i2c_start_wait_for+0x2a>
    107c:	69 17       	cp	r22, r25
    107e:	80 f7       	brcc	.-32     	; 0x1060 <i2c_start_wait_for+0x8>
    1080:	0f c0       	rjmp	.+30     	; 0x10a0 <i2c_start_wait_for+0x48>
    1082:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1086:	40 93 bc 00 	sts	0x00BC, r20	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    108a:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    108e:	27 ff       	sbrs	r18, 7
    1090:	fc cf       	rjmp	.-8      	; 0x108a <i2c_start_wait_for+0x32>
    1092:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1096:	28 7f       	andi	r18, 0xF8	; 248
    1098:	20 32       	cpi	r18, 0x20	; 32
    109a:	39 f0       	breq	.+14     	; 0x10aa <i2c_start_wait_for+0x52>
    109c:	28 35       	cpi	r18, 0x58	; 88
    109e:	29 f0       	breq	.+10     	; 0x10aa <i2c_start_wait_for+0x52>
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	69 17       	cp	r22, r25
    10a4:	48 f0       	brcs	.+18     	; 0x10b8 <i2c_start_wait_for+0x60>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	08 95       	ret
    10aa:	50 93 bc 00 	sts	0x00BC, r21	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10ae:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10b2:	24 fd       	sbrc	r18, 4
    10b4:	fc cf       	rjmp	.-8      	; 0x10ae <i2c_start_wait_for+0x56>
    10b6:	e2 cf       	rjmp	.-60     	; 0x107c <i2c_start_wait_for+0x24>
    10b8:	08 95       	ret

000010ba <i2c_rep_start>:
    10ba:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <i2c_start>

000010be <i2c_stop>:
    10be:	84 e9       	ldi	r24, 0x94	; 148
    10c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10c4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10c8:	84 fd       	sbrc	r24, 4
    10ca:	fc cf       	rjmp	.-8      	; 0x10c4 <i2c_stop+0x6>
    10cc:	08 95       	ret

000010ce <i2c_write>:
    10ce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    10d2:	84 e8       	ldi	r24, 0x84	; 132
    10d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10d8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10dc:	87 ff       	sbrs	r24, 7
    10de:	fc cf       	rjmp	.-8      	; 0x10d8 <i2c_write+0xa>
    10e0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    10e4:	98 7f       	andi	r25, 0xF8	; 248
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	98 32       	cpi	r25, 0x28	; 40
    10ea:	09 f4       	brne	.+2      	; 0x10ee <i2c_write+0x20>
    10ec:	80 e0       	ldi	r24, 0x00	; 0
    10ee:	08 95       	ret

000010f0 <i2c_readAck>:
    10f0:	84 ec       	ldi	r24, 0xC4	; 196
    10f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10f6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    10fa:	87 ff       	sbrs	r24, 7
    10fc:	fc cf       	rjmp	.-8      	; 0x10f6 <i2c_readAck+0x6>
    10fe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1102:	08 95       	ret

00001104 <i2c_readNak>:
    1104:	84 e8       	ldi	r24, 0x84	; 132
    1106:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    110a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    110e:	87 ff       	sbrs	r24, 7
    1110:	fc cf       	rjmp	.-8      	; 0x110a <i2c_readNak+0x6>
    1112:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1116:	08 95       	ret

00001118 <__udivmodhi4>:
    1118:	aa 1b       	sub	r26, r26
    111a:	bb 1b       	sub	r27, r27
    111c:	51 e1       	ldi	r21, 0x11	; 17
    111e:	07 c0       	rjmp	.+14     	; 0x112e <__udivmodhi4_ep>

00001120 <__udivmodhi4_loop>:
    1120:	aa 1f       	adc	r26, r26
    1122:	bb 1f       	adc	r27, r27
    1124:	a6 17       	cp	r26, r22
    1126:	b7 07       	cpc	r27, r23
    1128:	10 f0       	brcs	.+4      	; 0x112e <__udivmodhi4_ep>
    112a:	a6 1b       	sub	r26, r22
    112c:	b7 0b       	sbc	r27, r23

0000112e <__udivmodhi4_ep>:
    112e:	88 1f       	adc	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	5a 95       	dec	r21
    1134:	a9 f7       	brne	.-22     	; 0x1120 <__udivmodhi4_loop>
    1136:	80 95       	com	r24
    1138:	90 95       	com	r25
    113a:	bc 01       	movw	r22, r24
    113c:	cd 01       	movw	r24, r26
    113e:	08 95       	ret

00001140 <__tablejump2__>:
    1140:	ee 0f       	add	r30, r30
    1142:	ff 1f       	adc	r31, r31
    1144:	05 90       	lpm	r0, Z+
    1146:	f4 91       	lpm	r31, Z
    1148:	e0 2d       	mov	r30, r0
    114a:	09 94       	ijmp

0000114c <_exit>:
    114c:	f8 94       	cli

0000114e <__stop_program>:
    114e:	ff cf       	rjmp	.-2      	; 0x114e <__stop_program>
